OpenShadingLanguage 1.00
# Compiled by oslc 1.4.1
shader node_wave_texture
param	int	use_mapping	0 		 %read{2,2} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		 %read{3,3} %write{2147483647,-1}
param	string	Type	"Bands" 		 %read{7,15} %write{2147483647,-1}
param	float	Scale	5 		 %read{4,4} %write{2147483647,-1}
param	float	Distortion	0 		 %read{19,1495} %write{2147483647,-1}
param	float	Detail	2 		 %read{27,27} %write{2147483647,-1}
param	float	DetailScale	1 		 %read{21,21} %write{2147483647,-1}
param	point	Vector	0 0 0 		 %read{1,1} %write{0,0}
oparam	float	Fac	0 		 %read{1500,1500} %write{1499,1499}
oparam	color	Color	0 0 0 		 %read{2147483647,-1} %write{1500,1500}
global	point	P	 %read{0,0} %write{2147483647,-1}
local	float	___311_r	 %read{30,1439} %write{30,1439}
local	float	___311_g	 %read{30,1439} %write{30,1439}
local	float	___311_b	 %read{30,1439} %write{30,1439}
local	int	___312_xx	 %read{30,1439} %write{30,1439}
local	int	___312_yy	 %read{30,1439} %write{30,1439}
local	int	___312_zz	 %read{30,1439} %write{30,1439}
local	int	___312_xi	 %read{30,1353} %write{30,1340}
local	int	___312_yi	 %read{30,1357} %write{30,1343}
local	int	___312_zi	 %read{30,1361} %write{30,1346}
local	point	___318_ip	 %read{30,1439} %write{30,1439}
local	point	___318_vp	 %read{30,1439} %write{30,1439}
local	point	___318_pd	 %read{30,1439} %write{30,1439}
local	float	___318_d	 %read{30,1439} %write{30,1439}
local	float[4]	___323_da	 %read{30,1213} %write{30,1212}
local	point[4]	___323_pa	 %read{30,1212} %write{30,1212}
local	float[4]	___324_da	 %read{30,1441} %write{30,1439}
local	point[4]	___324_pa	 %read{30,1439} %write{30,1439}
local	float	___330_t	 %read{30,1447} %write{30,1443}
local	float	___337_f	 %read{30,767} %write{30,761}
local	float	___340_fscale	 %read{30,752} %write{23,747}
local	float	___340_amp	 %read{30,1461} %write{24,747}
local	float	___340_sum	 %read{30,1493} %write{25,1492}
local	int	___340_i	 %read{30,747} %write{30,747}
local	int	___340_n	 %read{32,1487} %write{29,29}
local	float	___340_octaves	 %read{29,749} %write{28,28}
local	float	___342_t	 %read{30,747} %write{30,747}
local	float	___340_rmd	 %read{750,1482} %write{749,749}
local	float	___343_t	 %read{788,1461} %write{765,1460}
local	float	___343_sum2	 %read{1479,1482} %write{1462,1479}
local	float	___346_n	 %read{30,1497} %write{6,1496}
local	point	p	 %read{3,4} %write{1,3}
temp	point	$tmp1	 %read{9,21} %write{4,4}
const	string	$const1	"wave"		 %read{5,5} %write{2147483647,-1}
const	float	$const2	0		 %read{6,1456} %write{2147483647,-1}
const	string	$const3	"Bands"		 %read{7,7} %write{2147483647,-1}
temp	int	$tmp2	 %read{8,8} %write{7,7}
const	int	$const4	0		 %read{9,1457} %write{2147483647,-1}
temp	float	$tmp3	 %read{11,11} %write{9,9}
const	int	$const5	1		 %read{10,1489} %write{2147483647,-1}
temp	float	$tmp4	 %read{11,11} %write{10,10}
temp	float	$tmp5	 %read{13,13} %write{11,11}
const	int	$const6	2		 %read{12,1474} %write{2147483647,-1}
temp	float	$tmp6	 %read{13,13} %write{12,12}
temp	float	$tmp7	 %read{14,14} %write{13,13}
const	float	$const7	10		 %read{14,1443} %write{2147483647,-1}
const	string	$const8	"Rings"		 %read{15,15} %write{2147483647,-1}
temp	int	$tmp8	 %read{16,16} %write{15,15}
temp	float	$tmp9	 %read{18,18} %write{17,17}
const	float	$const9	20		 %read{18,18} %write{2147483647,-1}
temp	int	$tmp10	 %read{20,20} %write{19,19}
temp	float	$tmp11	 %read{1495,1495} %write{1483,1493}
temp	point	$tmp12	 %read{30,752} %write{21,747}
const	string	$const10	"Perlin"		 %read{35,1452} %write{2147483647,-1}
const	string	$const11	"noise_turbulence"		 %read{22,22} %write{2147483647,-1}
const	float	$const12	1		 %read{23,1480} %write{2147483647,-1}
const	float	$const13	16		 %read{27,27} %write{2147483647,-1}
const	string	$const14	"clamp"		 %read{26,26} %write{2147483647,-1}
temp	float	$tmp13	 %read{28,28} %write{27,27}
temp	int	$tmp14	 %read{30,747} %write{30,747}
temp	point	$tmp15	 %read{41,735} %write{33,720}
const	string	$const15	"noise_basis"		 %read{34,753} %write{2147483647,-1}
temp	int	$tmp16	 %read{36,36} %write{35,35}
const	string	$const16	"safe_noise"		 %read{37,756} %write{2147483647,-1}
temp	int	$tmp17	 %read{40,40} %write{39,39}
const	string	$const17	"perlin"		 %read{41,760} %write{2147483647,-1}
temp	int	$tmp18	 %read{44,44} %write{43,43}
temp	int	$tmp19	 %read{45,45} %write{44,44}
const	float	$const18	0.5		 %read{46,1499} %write{2147483647,-1}
const	string	$const19	"Voronoi F1"		 %read{50,769} %write{2147483647,-1}
temp	int	$tmp20	 %read{51,51} %write{50,50}
const	string	$const20	"voronoi_F1S"		 %read{52,771} %write{2147483647,-1}
const	float	$const21	2		 %read{159,1458} %write{2147483647,-1}
temp	float	$tmp21	 %read{159,159} %write{158,158}
const	string	$const22	"voronoi_F1"		 %read{53,772} %write{2147483647,-1}
const	string	$const23	"voronoi_Fn"		 %read{54,1109} %write{2147483647,-1}
const	string	$const25	"voronoi"		 %read{55,1337} %write{2147483647,-1}
temp	float	$tmp22	 %read{58,58} %write{57,57}
temp	float	$tmp23	 %read{57,57} %write{56,56}
temp	float	$tmp24	 %read{61,61} %write{60,60}
temp	float	$tmp25	 %read{60,60} %write{59,59}
temp	float	$tmp26	 %read{64,64} %write{63,63}
temp	float	$tmp27	 %read{63,63} %write{62,62}
const	float	$const26	1e+010		 %read{65,1350} %write{2147483647,-1}
const	int	$const27	3		 %read{68,1433} %write{2147483647,-1}
temp	int	$tmp28	 %read{72,72} %write{71,71}
temp	int	$tmp29	 %read{69,157} %write{69,157}
temp	int	$tmp30	 %read{76,76} %write{75,75}
temp	int	$tmp31	 %read{73,155} %write{73,155}
temp	int	$tmp32	 %read{80,80} %write{79,79}
temp	int	$tmp33	 %read{77,153} %write{77,153}
temp	float	$tmp34	 %read{84,84} %write{81,81}
temp	float	$tmp35	 %read{84,84} %write{82,82}
temp	float	$tmp36	 %read{84,84} %write{83,83}
temp	color	$tmp37	 %read{98,98} %write{97,97}
const	string	$const28	"cellnoise_color"		 %read{85,1367} %write{2147483647,-1}
temp	point	$tmp38	 %read{91,91} %write{90,90}
temp	float	$tmp39	 %read{90,90} %write{87,87}
temp	float	$tmp40	 %read{90,90} %write{88,88}
temp	float	$tmp41	 %read{90,90} %write{89,89}
temp	point	$tmp42	 %read{96,96} %write{95,95}
temp	float	$tmp43	 %read{95,95} %write{92,92}
temp	float	$tmp44	 %read{95,95} %write{93,93}
temp	float	$tmp45	 %read{95,95} %write{94,94}
temp	point	$tmp46	 %read{100,100} %write{99,99}
const	string	$const29	"voronoi_distance"		 %read{101,1383} %write{2147483647,-1}
temp	point	$tmp47	 %read{107,107} %write{106,106}
temp	float	$tmp48	 %read{106,106} %write{103,103}
temp	float	$tmp49	 %read{106,106} %write{104,104}
temp	float	$tmp50	 %read{106,106} %write{105,105}
temp	float	$tmp51	 %read{109,109} %write{108,108}
temp	int	$tmp52	 %read{110,110} %write{109,109}
temp	float	$tmp53	 %read{112,112} %write{111,111}
temp	float	$tmp54	 %read{114,114} %write{113,113}
temp	float	$tmp55	 %read{116,116} %write{115,115}
temp	point	$tmp56	 %read{119,119} %write{118,118}
temp	point	$tmp57	 %read{121,121} %write{120,120}
temp	point	$tmp58	 %read{123,123} %write{122,122}
temp	float	$tmp59	 %read{126,126} %write{125,125}
temp	int	$tmp60	 %read{127,127} %write{126,126}
temp	float	$tmp61	 %read{129,129} %write{128,128}
temp	float	$tmp62	 %read{131,131} %write{130,130}
temp	point	$tmp63	 %read{134,134} %write{133,133}
temp	point	$tmp64	 %read{136,136} %write{135,135}
temp	float	$tmp65	 %read{139,139} %write{138,138}
temp	int	$tmp66	 %read{140,140} %write{139,139}
temp	float	$tmp67	 %read{142,142} %write{141,141}
temp	point	$tmp68	 %read{145,145} %write{144,144}
temp	float	$tmp69	 %read{148,148} %write{147,147}
temp	int	$tmp70	 %read{149,149} %write{148,148}
temp	int	$tmp71	 %read{2147483647,-1} %write{152,152}
temp	int	$tmp72	 %read{2147483647,-1} %write{154,154}
temp	int	$tmp73	 %read{2147483647,-1} %write{156,156}
temp	float	$tmp74	 %read{160,160} %write{159,159}
const	string	$const30	"Voronoi F2"		 %read{162,881} %write{2147483647,-1}
temp	int	$tmp75	 %read{163,163} %write{162,162}
const	string	$const31	"voronoi_F2S"		 %read{164,883} %write{2147483647,-1}
temp	float	$tmp76	 %read{271,271} %write{270,270}
const	string	$const32	"voronoi_F2"		 %read{165,884} %write{2147483647,-1}
temp	float	$tmp77	 %read{170,170} %write{169,169}
temp	float	$tmp78	 %read{169,169} %write{168,168}
temp	float	$tmp79	 %read{173,173} %write{172,172}
temp	float	$tmp80	 %read{172,172} %write{171,171}
temp	float	$tmp81	 %read{176,176} %write{175,175}
temp	float	$tmp82	 %read{175,175} %write{174,174}
temp	int	$tmp83	 %read{184,184} %write{183,183}
temp	int	$tmp84	 %read{181,269} %write{181,269}
temp	int	$tmp85	 %read{188,188} %write{187,187}
temp	int	$tmp86	 %read{185,267} %write{185,267}
temp	int	$tmp87	 %read{192,192} %write{191,191}
temp	int	$tmp88	 %read{189,265} %write{189,265}
temp	float	$tmp89	 %read{196,196} %write{193,193}
temp	float	$tmp90	 %read{196,196} %write{194,194}
temp	float	$tmp91	 %read{196,196} %write{195,195}
temp	color	$tmp92	 %read{210,210} %write{209,209}
temp	point	$tmp93	 %read{203,203} %write{202,202}
temp	float	$tmp94	 %read{202,202} %write{199,199}
temp	float	$tmp95	 %read{202,202} %write{200,200}
temp	float	$tmp96	 %read{202,202} %write{201,201}
temp	point	$tmp97	 %read{208,208} %write{207,207}
temp	float	$tmp98	 %read{207,207} %write{204,204}
temp	float	$tmp99	 %read{207,207} %write{205,205}
temp	float	$tmp100	 %read{207,207} %write{206,206}
temp	point	$tmp101	 %read{212,212} %write{211,211}
temp	point	$tmp102	 %read{219,219} %write{218,218}
temp	float	$tmp103	 %read{218,218} %write{215,215}
temp	float	$tmp104	 %read{218,218} %write{216,216}
temp	float	$tmp105	 %read{218,218} %write{217,217}
temp	float	$tmp106	 %read{221,221} %write{220,220}
temp	int	$tmp107	 %read{222,222} %write{221,221}
temp	float	$tmp108	 %read{224,224} %write{223,223}
temp	float	$tmp109	 %read{226,226} %write{225,225}
temp	float	$tmp110	 %read{228,228} %write{227,227}
temp	point	$tmp111	 %read{231,231} %write{230,230}
temp	point	$tmp112	 %read{233,233} %write{232,232}
temp	point	$tmp113	 %read{235,235} %write{234,234}
temp	float	$tmp114	 %read{238,238} %write{237,237}
temp	int	$tmp115	 %read{239,239} %write{238,238}
temp	float	$tmp116	 %read{241,241} %write{240,240}
temp	float	$tmp117	 %read{243,243} %write{242,242}
temp	point	$tmp118	 %read{246,246} %write{245,245}
temp	point	$tmp119	 %read{248,248} %write{247,247}
temp	float	$tmp120	 %read{251,251} %write{250,250}
temp	int	$tmp121	 %read{252,252} %write{251,251}
temp	float	$tmp122	 %read{254,254} %write{253,253}
temp	point	$tmp123	 %read{257,257} %write{256,256}
temp	float	$tmp124	 %read{260,260} %write{259,259}
temp	int	$tmp125	 %read{261,261} %write{260,260}
temp	int	$tmp126	 %read{2147483647,-1} %write{264,264}
temp	int	$tmp127	 %read{2147483647,-1} %write{266,266}
temp	int	$tmp128	 %read{2147483647,-1} %write{268,268}
temp	float	$tmp129	 %read{272,272} %write{271,271}
const	string	$const33	"Voronoi F3"		 %read{274,993} %write{2147483647,-1}
temp	int	$tmp130	 %read{275,275} %write{274,274}
const	string	$const34	"voronoi_F3S"		 %read{276,995} %write{2147483647,-1}
temp	float	$tmp131	 %read{383,383} %write{382,382}
const	string	$const35	"voronoi_F3"		 %read{277,996} %write{2147483647,-1}
temp	float	$tmp132	 %read{282,282} %write{281,281}
temp	float	$tmp133	 %read{281,281} %write{280,280}
temp	float	$tmp134	 %read{285,285} %write{284,284}
temp	float	$tmp135	 %read{284,284} %write{283,283}
temp	float	$tmp136	 %read{288,288} %write{287,287}
temp	float	$tmp137	 %read{287,287} %write{286,286}
temp	int	$tmp138	 %read{296,296} %write{295,295}
temp	int	$tmp139	 %read{293,381} %write{293,381}
temp	int	$tmp140	 %read{300,300} %write{299,299}
temp	int	$tmp141	 %read{297,379} %write{297,379}
temp	int	$tmp142	 %read{304,304} %write{303,303}
temp	int	$tmp143	 %read{301,377} %write{301,377}
temp	float	$tmp144	 %read{308,308} %write{305,305}
temp	float	$tmp145	 %read{308,308} %write{306,306}
temp	float	$tmp146	 %read{308,308} %write{307,307}
temp	color	$tmp147	 %read{322,322} %write{321,321}
temp	point	$tmp148	 %read{315,315} %write{314,314}
temp	float	$tmp149	 %read{314,314} %write{311,311}
temp	float	$tmp150	 %read{314,314} %write{312,312}
temp	float	$tmp151	 %read{314,314} %write{313,313}
temp	point	$tmp152	 %read{320,320} %write{319,319}
temp	float	$tmp153	 %read{319,319} %write{316,316}
temp	float	$tmp154	 %read{319,319} %write{317,317}
temp	float	$tmp155	 %read{319,319} %write{318,318}
temp	point	$tmp156	 %read{324,324} %write{323,323}
temp	point	$tmp157	 %read{331,331} %write{330,330}
temp	float	$tmp158	 %read{330,330} %write{327,327}
temp	float	$tmp159	 %read{330,330} %write{328,328}
temp	float	$tmp160	 %read{330,330} %write{329,329}
temp	float	$tmp161	 %read{333,333} %write{332,332}
temp	int	$tmp162	 %read{334,334} %write{333,333}
temp	float	$tmp163	 %read{336,336} %write{335,335}
temp	float	$tmp164	 %read{338,338} %write{337,337}
temp	float	$tmp165	 %read{340,340} %write{339,339}
temp	point	$tmp166	 %read{343,343} %write{342,342}
temp	point	$tmp167	 %read{345,345} %write{344,344}
temp	point	$tmp168	 %read{347,347} %write{346,346}
temp	float	$tmp169	 %read{350,350} %write{349,349}
temp	int	$tmp170	 %read{351,351} %write{350,350}
temp	float	$tmp171	 %read{353,353} %write{352,352}
temp	float	$tmp172	 %read{355,355} %write{354,354}
temp	point	$tmp173	 %read{358,358} %write{357,357}
temp	point	$tmp174	 %read{360,360} %write{359,359}
temp	float	$tmp175	 %read{363,363} %write{362,362}
temp	int	$tmp176	 %read{364,364} %write{363,363}
temp	float	$tmp177	 %read{366,366} %write{365,365}
temp	point	$tmp178	 %read{369,369} %write{368,368}
temp	float	$tmp179	 %read{372,372} %write{371,371}
temp	int	$tmp180	 %read{373,373} %write{372,372}
temp	int	$tmp181	 %read{2147483647,-1} %write{376,376}
temp	int	$tmp182	 %read{2147483647,-1} %write{378,378}
temp	int	$tmp183	 %read{2147483647,-1} %write{380,380}
temp	float	$tmp184	 %read{384,384} %write{383,383}
const	string	$const36	"Voronoi F4"		 %read{386,1105} %write{2147483647,-1}
temp	int	$tmp185	 %read{387,387} %write{386,386}
const	string	$const37	"voronoi_F4S"		 %read{388,1107} %write{2147483647,-1}
temp	float	$tmp186	 %read{495,495} %write{494,494}
const	string	$const38	"voronoi_F4"		 %read{389,1108} %write{2147483647,-1}
temp	float	$tmp187	 %read{394,394} %write{393,393}
temp	float	$tmp188	 %read{393,393} %write{392,392}
temp	float	$tmp189	 %read{397,397} %write{396,396}
temp	float	$tmp190	 %read{396,396} %write{395,395}
temp	float	$tmp191	 %read{400,400} %write{399,399}
temp	float	$tmp192	 %read{399,399} %write{398,398}
temp	int	$tmp193	 %read{408,408} %write{407,407}
temp	int	$tmp194	 %read{405,493} %write{405,493}
temp	int	$tmp195	 %read{412,412} %write{411,411}
temp	int	$tmp196	 %read{409,491} %write{409,491}
temp	int	$tmp197	 %read{416,416} %write{415,415}
temp	int	$tmp198	 %read{413,489} %write{413,489}
temp	float	$tmp199	 %read{420,420} %write{417,417}
temp	float	$tmp200	 %read{420,420} %write{418,418}
temp	float	$tmp201	 %read{420,420} %write{419,419}
temp	color	$tmp202	 %read{434,434} %write{433,433}
temp	point	$tmp203	 %read{427,427} %write{426,426}
temp	float	$tmp204	 %read{426,426} %write{423,423}
temp	float	$tmp205	 %read{426,426} %write{424,424}
temp	float	$tmp206	 %read{426,426} %write{425,425}
temp	point	$tmp207	 %read{432,432} %write{431,431}
temp	float	$tmp208	 %read{431,431} %write{428,428}
temp	float	$tmp209	 %read{431,431} %write{429,429}
temp	float	$tmp210	 %read{431,431} %write{430,430}
temp	point	$tmp211	 %read{436,436} %write{435,435}
temp	point	$tmp212	 %read{443,443} %write{442,442}
temp	float	$tmp213	 %read{442,442} %write{439,439}
temp	float	$tmp214	 %read{442,442} %write{440,440}
temp	float	$tmp215	 %read{442,442} %write{441,441}
temp	float	$tmp216	 %read{445,445} %write{444,444}
temp	int	$tmp217	 %read{446,446} %write{445,445}
temp	float	$tmp218	 %read{448,448} %write{447,447}
temp	float	$tmp219	 %read{450,450} %write{449,449}
temp	float	$tmp220	 %read{452,452} %write{451,451}
temp	point	$tmp221	 %read{455,455} %write{454,454}
temp	point	$tmp222	 %read{457,457} %write{456,456}
temp	point	$tmp223	 %read{459,459} %write{458,458}
temp	float	$tmp224	 %read{462,462} %write{461,461}
temp	int	$tmp225	 %read{463,463} %write{462,462}
temp	float	$tmp226	 %read{465,465} %write{464,464}
temp	float	$tmp227	 %read{467,467} %write{466,466}
temp	point	$tmp228	 %read{470,470} %write{469,469}
temp	point	$tmp229	 %read{472,472} %write{471,471}
temp	float	$tmp230	 %read{475,475} %write{474,474}
temp	int	$tmp231	 %read{476,476} %write{475,475}
temp	float	$tmp232	 %read{478,478} %write{477,477}
temp	point	$tmp233	 %read{481,481} %write{480,480}
temp	float	$tmp234	 %read{484,484} %write{483,483}
temp	int	$tmp235	 %read{485,485} %write{484,484}
temp	int	$tmp236	 %read{2147483647,-1} %write{488,488}
temp	int	$tmp237	 %read{2147483647,-1} %write{490,490}
temp	int	$tmp238	 %read{2147483647,-1} %write{492,492}
temp	float	$tmp239	 %read{496,496} %write{495,495}
const	string	$const39	"Voronoi F2-F1"		 %read{498,1217} %write{2147483647,-1}
temp	int	$tmp240	 %read{499,499} %write{498,498}
const	string	$const40	"voronoi_F1F2S"		 %read{500,1219} %write{2147483647,-1}
temp	float	$tmp241	 %read{609,609} %write{608,608}
const	string	$const41	"voronoi_F1F2"		 %read{501,1335} %write{2147483647,-1}
const	string	$const42	"voronoi_FnFn"		 %read{502,1336} %write{2147483647,-1}
temp	float	$tmp242	 %read{506,506} %write{505,505}
temp	float	$tmp243	 %read{505,505} %write{504,504}
temp	float	$tmp244	 %read{509,509} %write{508,508}
temp	float	$tmp245	 %read{508,508} %write{507,507}
temp	float	$tmp246	 %read{512,512} %write{511,511}
temp	float	$tmp247	 %read{511,511} %write{510,510}
temp	int	$tmp248	 %read{520,520} %write{519,519}
temp	int	$tmp249	 %read{517,605} %write{517,605}
temp	int	$tmp250	 %read{524,524} %write{523,523}
temp	int	$tmp251	 %read{521,603} %write{521,603}
temp	int	$tmp252	 %read{528,528} %write{527,527}
temp	int	$tmp253	 %read{525,601} %write{525,601}
temp	float	$tmp254	 %read{532,532} %write{529,529}
temp	float	$tmp255	 %read{532,532} %write{530,530}
temp	float	$tmp256	 %read{532,532} %write{531,531}
temp	color	$tmp257	 %read{546,546} %write{545,545}
temp	point	$tmp258	 %read{539,539} %write{538,538}
temp	float	$tmp259	 %read{538,538} %write{535,535}
temp	float	$tmp260	 %read{538,538} %write{536,536}
temp	float	$tmp261	 %read{538,538} %write{537,537}
temp	point	$tmp262	 %read{544,544} %write{543,543}
temp	float	$tmp263	 %read{543,543} %write{540,540}
temp	float	$tmp264	 %read{543,543} %write{541,541}
temp	float	$tmp265	 %read{543,543} %write{542,542}
temp	point	$tmp266	 %read{548,548} %write{547,547}
temp	point	$tmp267	 %read{555,555} %write{554,554}
temp	float	$tmp268	 %read{554,554} %write{551,551}
temp	float	$tmp269	 %read{554,554} %write{552,552}
temp	float	$tmp270	 %read{554,554} %write{553,553}
temp	float	$tmp271	 %read{557,557} %write{556,556}
temp	int	$tmp272	 %read{558,558} %write{557,557}
temp	float	$tmp273	 %read{560,560} %write{559,559}
temp	float	$tmp274	 %read{562,562} %write{561,561}
temp	float	$tmp275	 %read{564,564} %write{563,563}
temp	point	$tmp276	 %read{567,567} %write{566,566}
temp	point	$tmp277	 %read{569,569} %write{568,568}
temp	point	$tmp278	 %read{571,571} %write{570,570}
temp	float	$tmp279	 %read{574,574} %write{573,573}
temp	int	$tmp280	 %read{575,575} %write{574,574}
temp	float	$tmp281	 %read{577,577} %write{576,576}
temp	float	$tmp282	 %read{579,579} %write{578,578}
temp	point	$tmp283	 %read{582,582} %write{581,581}
temp	point	$tmp284	 %read{584,584} %write{583,583}
temp	float	$tmp285	 %read{587,587} %write{586,586}
temp	int	$tmp286	 %read{588,588} %write{587,587}
temp	float	$tmp287	 %read{590,590} %write{589,589}
temp	point	$tmp288	 %read{593,593} %write{592,592}
temp	float	$tmp289	 %read{596,596} %write{595,595}
temp	int	$tmp290	 %read{597,597} %write{596,596}
temp	int	$tmp291	 %read{2147483647,-1} %write{600,600}
temp	int	$tmp292	 %read{2147483647,-1} %write{602,602}
temp	int	$tmp293	 %read{2147483647,-1} %write{604,604}
temp	float	$tmp294	 %read{608,608} %write{606,606}
temp	float	$tmp295	 %read{608,608} %write{607,607}
temp	float	$tmp296	 %read{610,610} %write{609,609}
const	string	$const43	"Voronoi Crackle"		 %read{612,1331} %write{2147483647,-1}
temp	int	$tmp297	 %read{613,613} %write{612,612}
const	string	$const44	"voronoi_CrS"		 %read{614,1333} %write{2147483647,-1}
temp	float	$tmp298	 %read{730,730} %write{727,728}
const	string	$const45	"voronoi_Cr"		 %read{615,1334} %write{2147483647,-1}
temp	float	$tmp299	 %read{724,724} %write{723,723}
temp	float	$tmp300	 %read{621,621} %write{620,620}
temp	float	$tmp301	 %read{620,620} %write{619,619}
temp	float	$tmp302	 %read{624,624} %write{623,623}
temp	float	$tmp303	 %read{623,623} %write{622,622}
temp	float	$tmp304	 %read{627,627} %write{626,626}
temp	float	$tmp305	 %read{626,626} %write{625,625}
temp	int	$tmp306	 %read{635,635} %write{634,634}
temp	int	$tmp307	 %read{632,720} %write{632,720}
temp	int	$tmp308	 %read{639,639} %write{638,638}
temp	int	$tmp309	 %read{636,718} %write{636,718}
temp	int	$tmp310	 %read{643,643} %write{642,642}
temp	int	$tmp311	 %read{640,716} %write{640,716}
temp	float	$tmp312	 %read{647,647} %write{644,644}
temp	float	$tmp313	 %read{647,647} %write{645,645}
temp	float	$tmp314	 %read{647,647} %write{646,646}
temp	color	$tmp315	 %read{661,661} %write{660,660}
temp	point	$tmp316	 %read{654,654} %write{653,653}
temp	float	$tmp317	 %read{653,653} %write{650,650}
temp	float	$tmp318	 %read{653,653} %write{651,651}
temp	float	$tmp319	 %read{653,653} %write{652,652}
temp	point	$tmp320	 %read{659,659} %write{658,658}
temp	float	$tmp321	 %read{658,658} %write{655,655}
temp	float	$tmp322	 %read{658,658} %write{656,656}
temp	float	$tmp323	 %read{658,658} %write{657,657}
temp	point	$tmp324	 %read{663,663} %write{662,662}
temp	point	$tmp325	 %read{670,670} %write{669,669}
temp	float	$tmp326	 %read{669,669} %write{666,666}
temp	float	$tmp327	 %read{669,669} %write{667,667}
temp	float	$tmp328	 %read{669,669} %write{668,668}
temp	float	$tmp329	 %read{672,672} %write{671,671}
temp	int	$tmp330	 %read{673,673} %write{672,672}
temp	float	$tmp331	 %read{675,675} %write{674,674}
temp	float	$tmp332	 %read{677,677} %write{676,676}
temp	float	$tmp333	 %read{679,679} %write{678,678}
temp	point	$tmp334	 %read{682,682} %write{681,681}
temp	point	$tmp335	 %read{684,684} %write{683,683}
temp	point	$tmp336	 %read{686,686} %write{685,685}
temp	float	$tmp337	 %read{689,689} %write{688,688}
temp	int	$tmp338	 %read{690,690} %write{689,689}
temp	float	$tmp339	 %read{692,692} %write{691,691}
temp	float	$tmp340	 %read{694,694} %write{693,693}
temp	point	$tmp341	 %read{697,697} %write{696,696}
temp	point	$tmp342	 %read{699,699} %write{698,698}
temp	float	$tmp343	 %read{702,702} %write{701,701}
temp	int	$tmp344	 %read{703,703} %write{702,702}
temp	float	$tmp345	 %read{705,705} %write{704,704}
temp	point	$tmp346	 %read{708,708} %write{707,707}
temp	float	$tmp347	 %read{711,711} %write{710,710}
temp	int	$tmp348	 %read{712,712} %write{711,711}
temp	int	$tmp349	 %read{2147483647,-1} %write{715,715}
temp	int	$tmp350	 %read{2147483647,-1} %write{717,717}
temp	int	$tmp351	 %read{2147483647,-1} %write{719,719}
temp	float	$tmp352	 %read{723,723} %write{721,721}
temp	float	$tmp353	 %read{723,723} %write{722,722}
temp	int	$tmp354	 %read{726,726} %write{725,725}
temp	float	$tmp355	 %read{731,731} %write{730,730}
const	string	$const46	"Cell Noise"		 %read{733,1452} %write{2147483647,-1}
temp	int	$tmp356	 %read{734,734} %write{733,733}
temp	float	$tmp357	 %read{740,740} %write{739,739}
temp	float	$tmp358	 %read{741,741} %write{740,740}
temp	float	$tmp359	 %read{743,743} %write{742,742}
temp	int	$tmp360	 %read{2147483647,-1} %write{746,746}
temp	float	$tmp361	 %read{749,749} %write{748,748}
temp	int	$tmp362	 %read{751,751} %write{750,750}
temp	point	$tmp363	 %read{760,1454} %write{752,1439}
temp	int	$tmp364	 %read{755,755} %write{754,754}
temp	int	$tmp365	 %read{759,759} %write{758,758}
temp	int	$tmp366	 %read{763,763} %write{762,762}
temp	int	$tmp367	 %read{764,764} %write{763,763}
temp	int	$tmp368	 %read{770,770} %write{769,769}
temp	float	$tmp369	 %read{878,878} %write{877,877}
temp	float	$tmp370	 %read{777,777} %write{776,776}
temp	float	$tmp371	 %read{776,776} %write{775,775}
temp	float	$tmp372	 %read{780,780} %write{779,779}
temp	float	$tmp373	 %read{779,779} %write{778,778}
temp	float	$tmp374	 %read{783,783} %write{782,782}
temp	float	$tmp375	 %read{782,782} %write{781,781}
temp	int	$tmp376	 %read{791,791} %write{790,790}
temp	int	$tmp377	 %read{788,876} %write{788,876}
temp	int	$tmp378	 %read{795,795} %write{794,794}
temp	int	$tmp379	 %read{792,874} %write{792,874}
temp	int	$tmp380	 %read{799,799} %write{798,798}
temp	int	$tmp381	 %read{796,872} %write{796,872}
temp	float	$tmp382	 %read{803,803} %write{800,800}
temp	float	$tmp383	 %read{803,803} %write{801,801}
temp	float	$tmp384	 %read{803,803} %write{802,802}
temp	color	$tmp385	 %read{817,817} %write{816,816}
temp	point	$tmp386	 %read{810,810} %write{809,809}
temp	float	$tmp387	 %read{809,809} %write{806,806}
temp	float	$tmp388	 %read{809,809} %write{807,807}
temp	float	$tmp389	 %read{809,809} %write{808,808}
temp	point	$tmp390	 %read{815,815} %write{814,814}
temp	float	$tmp391	 %read{814,814} %write{811,811}
temp	float	$tmp392	 %read{814,814} %write{812,812}
temp	float	$tmp393	 %read{814,814} %write{813,813}
temp	point	$tmp394	 %read{819,819} %write{818,818}
temp	point	$tmp395	 %read{826,826} %write{825,825}
temp	float	$tmp396	 %read{825,825} %write{822,822}
temp	float	$tmp397	 %read{825,825} %write{823,823}
temp	float	$tmp398	 %read{825,825} %write{824,824}
temp	float	$tmp399	 %read{828,828} %write{827,827}
temp	int	$tmp400	 %read{829,829} %write{828,828}
temp	float	$tmp401	 %read{831,831} %write{830,830}
temp	float	$tmp402	 %read{833,833} %write{832,832}
temp	float	$tmp403	 %read{835,835} %write{834,834}
temp	point	$tmp404	 %read{838,838} %write{837,837}
temp	point	$tmp405	 %read{840,840} %write{839,839}
temp	point	$tmp406	 %read{842,842} %write{841,841}
temp	float	$tmp407	 %read{845,845} %write{844,844}
temp	int	$tmp408	 %read{846,846} %write{845,845}
temp	float	$tmp409	 %read{848,848} %write{847,847}
temp	float	$tmp410	 %read{850,850} %write{849,849}
temp	point	$tmp411	 %read{853,853} %write{852,852}
temp	point	$tmp412	 %read{855,855} %write{854,854}
temp	float	$tmp413	 %read{858,858} %write{857,857}
temp	int	$tmp414	 %read{859,859} %write{858,858}
temp	float	$tmp415	 %read{861,861} %write{860,860}
temp	point	$tmp416	 %read{864,864} %write{863,863}
temp	float	$tmp417	 %read{867,867} %write{866,866}
temp	int	$tmp418	 %read{868,868} %write{867,867}
temp	int	$tmp419	 %read{2147483647,-1} %write{871,871}
temp	int	$tmp420	 %read{2147483647,-1} %write{873,873}
temp	int	$tmp421	 %read{2147483647,-1} %write{875,875}
temp	float	$tmp422	 %read{879,879} %write{878,878}
temp	int	$tmp423	 %read{882,882} %write{881,881}
temp	float	$tmp424	 %read{990,990} %write{989,989}
temp	float	$tmp425	 %read{889,889} %write{888,888}
temp	float	$tmp426	 %read{888,888} %write{887,887}
temp	float	$tmp427	 %read{892,892} %write{891,891}
temp	float	$tmp428	 %read{891,891} %write{890,890}
temp	float	$tmp429	 %read{895,895} %write{894,894}
temp	float	$tmp430	 %read{894,894} %write{893,893}
temp	int	$tmp431	 %read{903,903} %write{902,902}
temp	int	$tmp432	 %read{900,988} %write{900,988}
temp	int	$tmp433	 %read{907,907} %write{906,906}
temp	int	$tmp434	 %read{904,986} %write{904,986}
temp	int	$tmp435	 %read{911,911} %write{910,910}
temp	int	$tmp436	 %read{908,984} %write{908,984}
temp	float	$tmp437	 %read{915,915} %write{912,912}
temp	float	$tmp438	 %read{915,915} %write{913,913}
temp	float	$tmp439	 %read{915,915} %write{914,914}
temp	color	$tmp440	 %read{929,929} %write{928,928}
temp	point	$tmp441	 %read{922,922} %write{921,921}
temp	float	$tmp442	 %read{921,921} %write{918,918}
temp	float	$tmp443	 %read{921,921} %write{919,919}
temp	float	$tmp444	 %read{921,921} %write{920,920}
temp	point	$tmp445	 %read{927,927} %write{926,926}
temp	float	$tmp446	 %read{926,926} %write{923,923}
temp	float	$tmp447	 %read{926,926} %write{924,924}
temp	float	$tmp448	 %read{926,926} %write{925,925}
temp	point	$tmp449	 %read{931,931} %write{930,930}
temp	point	$tmp450	 %read{938,938} %write{937,937}
temp	float	$tmp451	 %read{937,937} %write{934,934}
temp	float	$tmp452	 %read{937,937} %write{935,935}
temp	float	$tmp453	 %read{937,937} %write{936,936}
temp	float	$tmp454	 %read{940,940} %write{939,939}
temp	int	$tmp455	 %read{941,941} %write{940,940}
temp	float	$tmp456	 %read{943,943} %write{942,942}
temp	float	$tmp457	 %read{945,945} %write{944,944}
temp	float	$tmp458	 %read{947,947} %write{946,946}
temp	point	$tmp459	 %read{950,950} %write{949,949}
temp	point	$tmp460	 %read{952,952} %write{951,951}
temp	point	$tmp461	 %read{954,954} %write{953,953}
temp	float	$tmp462	 %read{957,957} %write{956,956}
temp	int	$tmp463	 %read{958,958} %write{957,957}
temp	float	$tmp464	 %read{960,960} %write{959,959}
temp	float	$tmp465	 %read{962,962} %write{961,961}
temp	point	$tmp466	 %read{965,965} %write{964,964}
temp	point	$tmp467	 %read{967,967} %write{966,966}
temp	float	$tmp468	 %read{970,970} %write{969,969}
temp	int	$tmp469	 %read{971,971} %write{970,970}
temp	float	$tmp470	 %read{973,973} %write{972,972}
temp	point	$tmp471	 %read{976,976} %write{975,975}
temp	float	$tmp472	 %read{979,979} %write{978,978}
temp	int	$tmp473	 %read{980,980} %write{979,979}
temp	int	$tmp474	 %read{2147483647,-1} %write{983,983}
temp	int	$tmp475	 %read{2147483647,-1} %write{985,985}
temp	int	$tmp476	 %read{2147483647,-1} %write{987,987}
temp	float	$tmp477	 %read{991,991} %write{990,990}
temp	int	$tmp478	 %read{994,994} %write{993,993}
temp	float	$tmp479	 %read{1102,1102} %write{1101,1101}
temp	float	$tmp480	 %read{1001,1001} %write{1000,1000}
temp	float	$tmp481	 %read{1000,1000} %write{999,999}
temp	float	$tmp482	 %read{1004,1004} %write{1003,1003}
temp	float	$tmp483	 %read{1003,1003} %write{1002,1002}
temp	float	$tmp484	 %read{1007,1007} %write{1006,1006}
temp	float	$tmp485	 %read{1006,1006} %write{1005,1005}
temp	int	$tmp486	 %read{1015,1015} %write{1014,1014}
temp	int	$tmp487	 %read{1012,1100} %write{1012,1100}
temp	int	$tmp488	 %read{1019,1019} %write{1018,1018}
temp	int	$tmp489	 %read{1016,1098} %write{1016,1098}
temp	int	$tmp490	 %read{1023,1023} %write{1022,1022}
temp	int	$tmp491	 %read{1020,1096} %write{1020,1096}
temp	float	$tmp492	 %read{1027,1027} %write{1024,1024}
temp	float	$tmp493	 %read{1027,1027} %write{1025,1025}
temp	float	$tmp494	 %read{1027,1027} %write{1026,1026}
temp	color	$tmp495	 %read{1041,1041} %write{1040,1040}
temp	point	$tmp496	 %read{1034,1034} %write{1033,1033}
temp	float	$tmp497	 %read{1033,1033} %write{1030,1030}
temp	float	$tmp498	 %read{1033,1033} %write{1031,1031}
temp	float	$tmp499	 %read{1033,1033} %write{1032,1032}
temp	point	$tmp500	 %read{1039,1039} %write{1038,1038}
temp	float	$tmp501	 %read{1038,1038} %write{1035,1035}
temp	float	$tmp502	 %read{1038,1038} %write{1036,1036}
temp	float	$tmp503	 %read{1038,1038} %write{1037,1037}
temp	point	$tmp504	 %read{1043,1043} %write{1042,1042}
temp	point	$tmp505	 %read{1050,1050} %write{1049,1049}
temp	float	$tmp506	 %read{1049,1049} %write{1046,1046}
temp	float	$tmp507	 %read{1049,1049} %write{1047,1047}
temp	float	$tmp508	 %read{1049,1049} %write{1048,1048}
temp	float	$tmp509	 %read{1052,1052} %write{1051,1051}
temp	int	$tmp510	 %read{1053,1053} %write{1052,1052}
temp	float	$tmp511	 %read{1055,1055} %write{1054,1054}
temp	float	$tmp512	 %read{1057,1057} %write{1056,1056}
temp	float	$tmp513	 %read{1059,1059} %write{1058,1058}
temp	point	$tmp514	 %read{1062,1062} %write{1061,1061}
temp	point	$tmp515	 %read{1064,1064} %write{1063,1063}
temp	point	$tmp516	 %read{1066,1066} %write{1065,1065}
temp	float	$tmp517	 %read{1069,1069} %write{1068,1068}
temp	int	$tmp518	 %read{1070,1070} %write{1069,1069}
temp	float	$tmp519	 %read{1072,1072} %write{1071,1071}
temp	float	$tmp520	 %read{1074,1074} %write{1073,1073}
temp	point	$tmp521	 %read{1077,1077} %write{1076,1076}
temp	point	$tmp522	 %read{1079,1079} %write{1078,1078}
temp	float	$tmp523	 %read{1082,1082} %write{1081,1081}
temp	int	$tmp524	 %read{1083,1083} %write{1082,1082}
temp	float	$tmp525	 %read{1085,1085} %write{1084,1084}
temp	point	$tmp526	 %read{1088,1088} %write{1087,1087}
temp	float	$tmp527	 %read{1091,1091} %write{1090,1090}
temp	int	$tmp528	 %read{1092,1092} %write{1091,1091}
temp	int	$tmp529	 %read{2147483647,-1} %write{1095,1095}
temp	int	$tmp530	 %read{2147483647,-1} %write{1097,1097}
temp	int	$tmp531	 %read{2147483647,-1} %write{1099,1099}
temp	float	$tmp532	 %read{1103,1103} %write{1102,1102}
temp	int	$tmp533	 %read{1106,1106} %write{1105,1105}
temp	float	$tmp534	 %read{1214,1214} %write{1213,1213}
temp	float	$tmp535	 %read{1113,1113} %write{1112,1112}
temp	float	$tmp536	 %read{1112,1112} %write{1111,1111}
temp	float	$tmp537	 %read{1116,1116} %write{1115,1115}
temp	float	$tmp538	 %read{1115,1115} %write{1114,1114}
temp	float	$tmp539	 %read{1119,1119} %write{1118,1118}
temp	float	$tmp540	 %read{1118,1118} %write{1117,1117}
temp	int	$tmp541	 %read{1127,1127} %write{1126,1126}
temp	int	$tmp542	 %read{1124,1212} %write{1124,1212}
temp	int	$tmp543	 %read{1131,1131} %write{1130,1130}
temp	int	$tmp544	 %read{1128,1210} %write{1128,1210}
temp	int	$tmp545	 %read{1135,1135} %write{1134,1134}
temp	int	$tmp546	 %read{1132,1208} %write{1132,1208}
temp	float	$tmp547	 %read{1139,1139} %write{1136,1136}
temp	float	$tmp548	 %read{1139,1139} %write{1137,1137}
temp	float	$tmp549	 %read{1139,1139} %write{1138,1138}
temp	color	$tmp550	 %read{1153,1153} %write{1152,1152}
temp	point	$tmp551	 %read{1146,1146} %write{1145,1145}
temp	float	$tmp552	 %read{1145,1145} %write{1142,1142}
temp	float	$tmp553	 %read{1145,1145} %write{1143,1143}
temp	float	$tmp554	 %read{1145,1145} %write{1144,1144}
temp	point	$tmp555	 %read{1151,1151} %write{1150,1150}
temp	float	$tmp556	 %read{1150,1150} %write{1147,1147}
temp	float	$tmp557	 %read{1150,1150} %write{1148,1148}
temp	float	$tmp558	 %read{1150,1150} %write{1149,1149}
temp	point	$tmp559	 %read{1155,1155} %write{1154,1154}
temp	point	$tmp560	 %read{1162,1162} %write{1161,1161}
temp	float	$tmp561	 %read{1161,1161} %write{1158,1158}
temp	float	$tmp562	 %read{1161,1161} %write{1159,1159}
temp	float	$tmp563	 %read{1161,1161} %write{1160,1160}
temp	float	$tmp564	 %read{1164,1164} %write{1163,1163}
temp	int	$tmp565	 %read{1165,1165} %write{1164,1164}
temp	float	$tmp566	 %read{1167,1167} %write{1166,1166}
temp	float	$tmp567	 %read{1169,1169} %write{1168,1168}
temp	float	$tmp568	 %read{1171,1171} %write{1170,1170}
temp	point	$tmp569	 %read{1174,1174} %write{1173,1173}
temp	point	$tmp570	 %read{1176,1176} %write{1175,1175}
temp	point	$tmp571	 %read{1178,1178} %write{1177,1177}
temp	float	$tmp572	 %read{1181,1181} %write{1180,1180}
temp	int	$tmp573	 %read{1182,1182} %write{1181,1181}
temp	float	$tmp574	 %read{1184,1184} %write{1183,1183}
temp	float	$tmp575	 %read{1186,1186} %write{1185,1185}
temp	point	$tmp576	 %read{1189,1189} %write{1188,1188}
temp	point	$tmp577	 %read{1191,1191} %write{1190,1190}
temp	float	$tmp578	 %read{1194,1194} %write{1193,1193}
temp	int	$tmp579	 %read{1195,1195} %write{1194,1194}
temp	float	$tmp580	 %read{1197,1197} %write{1196,1196}
temp	point	$tmp581	 %read{1200,1200} %write{1199,1199}
temp	float	$tmp582	 %read{1203,1203} %write{1202,1202}
temp	int	$tmp583	 %read{1204,1204} %write{1203,1203}
temp	int	$tmp584	 %read{2147483647,-1} %write{1207,1207}
temp	int	$tmp585	 %read{2147483647,-1} %write{1209,1209}
temp	int	$tmp586	 %read{2147483647,-1} %write{1211,1211}
temp	float	$tmp587	 %read{1215,1215} %write{1214,1214}
temp	int	$tmp588	 %read{1218,1218} %write{1217,1217}
temp	float	$tmp589	 %read{1328,1328} %write{1327,1327}
temp	float	$tmp590	 %read{1225,1225} %write{1224,1224}
temp	float	$tmp591	 %read{1224,1224} %write{1223,1223}
temp	float	$tmp592	 %read{1228,1228} %write{1227,1227}
temp	float	$tmp593	 %read{1227,1227} %write{1226,1226}
temp	float	$tmp594	 %read{1231,1231} %write{1230,1230}
temp	float	$tmp595	 %read{1230,1230} %write{1229,1229}
temp	int	$tmp596	 %read{1239,1239} %write{1238,1238}
temp	int	$tmp597	 %read{1236,1324} %write{1236,1324}
temp	int	$tmp598	 %read{1243,1243} %write{1242,1242}
temp	int	$tmp599	 %read{1240,1322} %write{1240,1322}
temp	int	$tmp600	 %read{1247,1247} %write{1246,1246}
temp	int	$tmp601	 %read{1244,1320} %write{1244,1320}
temp	float	$tmp602	 %read{1251,1251} %write{1248,1248}
temp	float	$tmp603	 %read{1251,1251} %write{1249,1249}
temp	float	$tmp604	 %read{1251,1251} %write{1250,1250}
temp	color	$tmp605	 %read{1265,1265} %write{1264,1264}
temp	point	$tmp606	 %read{1258,1258} %write{1257,1257}
temp	float	$tmp607	 %read{1257,1257} %write{1254,1254}
temp	float	$tmp608	 %read{1257,1257} %write{1255,1255}
temp	float	$tmp609	 %read{1257,1257} %write{1256,1256}
temp	point	$tmp610	 %read{1263,1263} %write{1262,1262}
temp	float	$tmp611	 %read{1262,1262} %write{1259,1259}
temp	float	$tmp612	 %read{1262,1262} %write{1260,1260}
temp	float	$tmp613	 %read{1262,1262} %write{1261,1261}
temp	point	$tmp614	 %read{1267,1267} %write{1266,1266}
temp	point	$tmp615	 %read{1274,1274} %write{1273,1273}
temp	float	$tmp616	 %read{1273,1273} %write{1270,1270}
temp	float	$tmp617	 %read{1273,1273} %write{1271,1271}
temp	float	$tmp618	 %read{1273,1273} %write{1272,1272}
temp	float	$tmp619	 %read{1276,1276} %write{1275,1275}
temp	int	$tmp620	 %read{1277,1277} %write{1276,1276}
temp	float	$tmp621	 %read{1279,1279} %write{1278,1278}
temp	float	$tmp622	 %read{1281,1281} %write{1280,1280}
temp	float	$tmp623	 %read{1283,1283} %write{1282,1282}
temp	point	$tmp624	 %read{1286,1286} %write{1285,1285}
temp	point	$tmp625	 %read{1288,1288} %write{1287,1287}
temp	point	$tmp626	 %read{1290,1290} %write{1289,1289}
temp	float	$tmp627	 %read{1293,1293} %write{1292,1292}
temp	int	$tmp628	 %read{1294,1294} %write{1293,1293}
temp	float	$tmp629	 %read{1296,1296} %write{1295,1295}
temp	float	$tmp630	 %read{1298,1298} %write{1297,1297}
temp	point	$tmp631	 %read{1301,1301} %write{1300,1300}
temp	point	$tmp632	 %read{1303,1303} %write{1302,1302}
temp	float	$tmp633	 %read{1306,1306} %write{1305,1305}
temp	int	$tmp634	 %read{1307,1307} %write{1306,1306}
temp	float	$tmp635	 %read{1309,1309} %write{1308,1308}
temp	point	$tmp636	 %read{1312,1312} %write{1311,1311}
temp	float	$tmp637	 %read{1315,1315} %write{1314,1314}
temp	int	$tmp638	 %read{1316,1316} %write{1315,1315}
temp	int	$tmp639	 %read{2147483647,-1} %write{1319,1319}
temp	int	$tmp640	 %read{2147483647,-1} %write{1321,1321}
temp	int	$tmp641	 %read{2147483647,-1} %write{1323,1323}
temp	float	$tmp642	 %read{1327,1327} %write{1325,1325}
temp	float	$tmp643	 %read{1327,1327} %write{1326,1326}
temp	float	$tmp644	 %read{1329,1329} %write{1328,1328}
temp	int	$tmp645	 %read{1332,1332} %write{1331,1331}
temp	float	$tmp646	 %read{1449,1449} %write{1446,1447}
temp	float	$tmp647	 %read{1443,1443} %write{1442,1442}
temp	float	$tmp648	 %read{1340,1340} %write{1339,1339}
temp	float	$tmp649	 %read{1339,1339} %write{1338,1338}
temp	float	$tmp650	 %read{1343,1343} %write{1342,1342}
temp	float	$tmp651	 %read{1342,1342} %write{1341,1341}
temp	float	$tmp652	 %read{1346,1346} %write{1345,1345}
temp	float	$tmp653	 %read{1345,1345} %write{1344,1344}
temp	int	$tmp654	 %read{1354,1354} %write{1353,1353}
temp	int	$tmp655	 %read{1351,1439} %write{1351,1439}
temp	int	$tmp656	 %read{1358,1358} %write{1357,1357}
temp	int	$tmp657	 %read{1355,1437} %write{1355,1437}
temp	int	$tmp658	 %read{1362,1362} %write{1361,1361}
temp	int	$tmp659	 %read{1359,1435} %write{1359,1435}
temp	float	$tmp660	 %read{1366,1366} %write{1363,1363}
temp	float	$tmp661	 %read{1366,1366} %write{1364,1364}
temp	float	$tmp662	 %read{1366,1366} %write{1365,1365}
temp	color	$tmp663	 %read{1380,1380} %write{1379,1379}
temp	point	$tmp664	 %read{1373,1373} %write{1372,1372}
temp	float	$tmp665	 %read{1372,1372} %write{1369,1369}
temp	float	$tmp666	 %read{1372,1372} %write{1370,1370}
temp	float	$tmp667	 %read{1372,1372} %write{1371,1371}
temp	point	$tmp668	 %read{1378,1378} %write{1377,1377}
temp	float	$tmp669	 %read{1377,1377} %write{1374,1374}
temp	float	$tmp670	 %read{1377,1377} %write{1375,1375}
temp	float	$tmp671	 %read{1377,1377} %write{1376,1376}
temp	point	$tmp672	 %read{1382,1382} %write{1381,1381}
temp	point	$tmp673	 %read{1389,1389} %write{1388,1388}
temp	float	$tmp674	 %read{1388,1388} %write{1385,1385}
temp	float	$tmp675	 %read{1388,1388} %write{1386,1386}
temp	float	$tmp676	 %read{1388,1388} %write{1387,1387}
temp	float	$tmp677	 %read{1391,1391} %write{1390,1390}
temp	int	$tmp678	 %read{1392,1392} %write{1391,1391}
temp	float	$tmp679	 %read{1394,1394} %write{1393,1393}
temp	float	$tmp680	 %read{1396,1396} %write{1395,1395}
temp	float	$tmp681	 %read{1398,1398} %write{1397,1397}
temp	point	$tmp682	 %read{1401,1401} %write{1400,1400}
temp	point	$tmp683	 %read{1403,1403} %write{1402,1402}
temp	point	$tmp684	 %read{1405,1405} %write{1404,1404}
temp	float	$tmp685	 %read{1408,1408} %write{1407,1407}
temp	int	$tmp686	 %read{1409,1409} %write{1408,1408}
temp	float	$tmp687	 %read{1411,1411} %write{1410,1410}
temp	float	$tmp688	 %read{1413,1413} %write{1412,1412}
temp	point	$tmp689	 %read{1416,1416} %write{1415,1415}
temp	point	$tmp690	 %read{1418,1418} %write{1417,1417}
temp	float	$tmp691	 %read{1421,1421} %write{1420,1420}
temp	int	$tmp692	 %read{1422,1422} %write{1421,1421}
temp	float	$tmp693	 %read{1424,1424} %write{1423,1423}
temp	point	$tmp694	 %read{1427,1427} %write{1426,1426}
temp	float	$tmp695	 %read{1430,1430} %write{1429,1429}
temp	int	$tmp696	 %read{1431,1431} %write{1430,1430}
temp	int	$tmp697	 %read{2147483647,-1} %write{1434,1434}
temp	int	$tmp698	 %read{2147483647,-1} %write{1436,1436}
temp	int	$tmp699	 %read{2147483647,-1} %write{1438,1438}
temp	float	$tmp700	 %read{1442,1442} %write{1440,1440}
temp	float	$tmp701	 %read{1442,1442} %write{1441,1441}
temp	int	$tmp702	 %read{1445,1445} %write{1444,1444}
temp	float	$tmp703	 %read{1450,1450} %write{1449,1449}
temp	int	$tmp704	 %read{1453,1453} %write{1452,1452}
temp	float	$tmp705	 %read{1459,1459} %write{1458,1458}
temp	float	$tmp706	 %read{1460,1460} %write{1459,1459}
temp	float	$tmp707	 %read{1462,1462} %write{1461,1461}
temp	int	$tmp708	 %read{1464,1464} %write{1463,1463}
temp	float	$tmp709	 %read{1469,1469} %write{1464,1464}
temp	int	$tmp710	 %read{1466,1466} %write{1465,1465}
temp	int	$tmp711	 %read{1467,1467} %write{1466,1466}
temp	int	$tmp712	 %read{1468,1468} %write{1467,1467}
temp	float	$tmp713	 %read{1469,1469} %write{1468,1468}
temp	float	$tmp714	 %read{1470,1470} %write{1469,1469}
temp	int	$tmp715	 %read{1472,1472} %write{1471,1471}
temp	int	$tmp716	 %read{1473,1473} %write{1472,1472}
temp	float	$tmp717	 %read{1478,1478} %write{1473,1473}
temp	int	$tmp718	 %read{1475,1475} %write{1474,1474}
temp	int	$tmp719	 %read{1476,1476} %write{1475,1475}
temp	int	$tmp720	 %read{1477,1477} %write{1476,1476}
temp	float	$tmp721	 %read{1478,1478} %write{1477,1477}
temp	float	$tmp722	 %read{1479,1479} %write{1478,1478}
temp	float	$tmp723	 %read{1481,1481} %write{1480,1480}
temp	float	$tmp724	 %read{1483,1483} %write{1481,1481}
temp	float	$tmp725	 %read{1483,1483} %write{1482,1482}
temp	int	$tmp726	 %read{1486,1486} %write{1485,1485}
temp	float	$tmp727	 %read{1491,1491} %write{1486,1486}
temp	int	$tmp728	 %read{1488,1488} %write{1487,1487}
temp	int	$tmp729	 %read{1489,1489} %write{1488,1488}
temp	int	$tmp730	 %read{1490,1490} %write{1489,1489}
temp	float	$tmp731	 %read{1491,1491} %write{1490,1490}
temp	float	$tmp732	 %read{1492,1492} %write{1491,1491}
temp	float	$tmp733	 %read{1496,1496} %write{1495,1495}
temp	float	$tmp734	 %read{1498,1498} %write{1497,1497}
temp	float	$tmp735	 %read{1499,1499} %write{1498,1498}
code Vector
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:48
# 	output float Fac = 0.0,
	assign		Vector P 	%filename{"D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl"} %line{48} %argrw{"wr"}
code ___main___
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:52
# 
	assign		p Vector 	%filename{"D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl"} %line{52} %argrw{"wr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:54
# 		p = transform(mapping, p);
	if		use_mapping 4 4 	%line{54} %argrw{"r"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:55
# 
	transform	p mapping p 	%line{55} %argrw{"wrr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:57
# 	Color = Fac;
	mul		$tmp1 p Scale 	%line{57} %argrw{"wrr"}
	functioncall	$const1 1500 	%argrw{"r"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:25
# 
	assign		___346_n $const2 	%line{25} %argrw{"wr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:27
# 		n = (p[0] + p[1] + p[2]) * 10.0;
	eq		$tmp2 Type $const3 	%line{27} %argrw{"wrr"}
	if		$tmp2 15 19 	%argrw{"r"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:28
# 	}
	compref		$tmp3 $tmp1 $const4 	%line{28} %argrw{"wrr"}
	compref		$tmp4 $tmp1 $const5 	%argrw{"wrr"}
	add		$tmp5 $tmp3 $tmp4 	%argrw{"wrr"}
	compref		$tmp6 $tmp1 $const6 	%argrw{"wrr"}
	add		$tmp7 $tmp5 $tmp6 	%argrw{"wrr"}
	mul		___346_n $tmp7 $const7 	%argrw{"wrr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:30
# 		n = length(p) * 20.0;
	eq		$tmp8 Type $const8 	%line{30} %argrw{"wrr"}
	if		$tmp8 19 19 	%argrw{"r"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:31
# 	}
	length		$tmp9 $tmp1 	%line{31} %argrw{"wr"}
	mul		___346_n $tmp9 $const9 	%argrw{"wrr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:34
# 		n = n + (distortion * noise_turbulence(p * dscale, "Perlin", detail, 0));
	neq		$tmp10 Distortion $const2 	%line{34} %argrw{"wrr"}
	if		$tmp10 1497 1497 	%argrw{"r"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:35
# 	}
	mul		$tmp12 $tmp1 DetailScale 	%line{35} %argrw{"wrr"}
	functioncall	$const11 1495 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:209
# 
	assign		___340_fscale $const12 	%filename{"D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h"} %line{209} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:210
# float noise_basis(point p, string basis)
	assign		___340_amp $const12 	%line{210} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:211
# {
	assign		___340_sum $const2 	%line{211} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:214
# 	if (basis == "Voronoi F1")
	functioncall	$const14 29 	%line{214} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\stdosl.h:144
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp13 Detail $const13 	%filename{"D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___340_octaves $tmp13 $const2 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:215
# 				point ip = point(xx, yy, zz);
	assign		___340_n ___340_octaves 	%filename{"D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h"} %line{215} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:217
# 				point pd = p - (vp + ip);
	for		$tmp14 32 33 746 748 	%line{217} %argrw{"r"}
	assign		___340_i $const4 	%argrw{"wr"}
	le		$tmp14 ___340_i ___340_n 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:218
# 				float d = voronoi_distance(distance_metric, pd, e);
	mul		$tmp15 ___340_fscale $tmp12 	%line{218} %argrw{"wrr"}
	functioncall	$const15 738 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp16 $const10 $const10 	%line{177} %argrw{"wrr"}
	if		$tmp16 50 50 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const16 49 	%line{178} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:158
# 	float f = 0.0;
	assign		___337_f $const2 	%line{158} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:161
# 	if (type == 0)
	eq		$tmp17 $const5 $const4 	%line{161} %argrw{"wrr"}
	if		$tmp17 42 43 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:162
# 		f = noise("perlin", p);
	noise		___337_f $const17 $tmp15 	%line{162} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:166
# 		f = noise(p);
	noise		___337_f $tmp15 	%line{166} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp18 ___337_f 	%line{169} %argrw{"wr"}
	eq		$tmp19 $tmp18 $const4 	%argrw{"wrr"}
	if		$tmp19 48 48 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:170
# 		return 0.5;
	assign		___342_t $const18 	%line{170} %argrw{"wr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:172
# 	return f;
	assign		___342_t ___337_f 	%line{172} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp20 $const10 $const19 	%line{179} %argrw{"wrr"}
	if		$tmp20 162 162 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const20 161 	%line{180} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const22 159 	%line{147} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const23 159 	%line{134} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 158 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp23 $tmp15 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp22 $tmp23 	%argrw{"wr"}
	assign		___312_xi $tmp22 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp25 $tmp15 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp24 $tmp25 	%argrw{"wr"}
	assign		___312_yi $tmp24 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp27 $tmp15 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp26 $tmp27 	%argrw{"wr"}
	assign		___312_zi $tmp26 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp29 71 73 156 158 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp28 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp29 ___312_xx $tmp28 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp31 75 77 154 156 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp30 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp31 ___312_yy $tmp30 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp33 79 81 152 154 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp32 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp33 ___312_zz $tmp32 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp34 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp35 ___312_yy 	%argrw{"wr"}
	assign		$tmp36 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp34 $tmp35 $tmp36 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 98 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp39 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp40 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp41 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp38 $tmp39 $tmp40 $tmp41 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp38 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp43 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp44 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp45 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp42 $tmp43 $tmp44 $tmp45 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp42 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp37 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp37 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp46 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp15 $tmp46 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 103 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp48 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp49 ___312_yy 	%argrw{"wr"}
	assign		$tmp50 ___312_zz 	%argrw{"wr"}
	point		$tmp47 $tmp48 $tmp49 $tmp50 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp47 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp51 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp52 ___318_d $tmp51 	%argrw{"wrr"}
	if		$tmp52 125 152 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp53 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp53 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp54 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp54 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp55 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp55 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp56 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp56 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp57 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp57 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp58 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp58 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp59 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp60 ___318_d $tmp59 	%argrw{"wrr"}
	if		$tmp60 138 152 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp61 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp61 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp62 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp62 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp63 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp63 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp64 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp64 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp65 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp66 ___318_d $tmp65 	%argrw{"wrr"}
	if		$tmp66 147 152 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp67 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp67 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp68 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp68 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp69 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp70 ___318_d $tmp69 	%argrw{"wrr"}
	if		$tmp70 152 152 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp71 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp72 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp73 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp21 ___323_da $const4 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp74 $const21 $tmp21 	%line{147} %argrw{"wrr"}
	sub		___342_t $tmp74 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp75 $const10 $const30 	%line{181} %argrw{"wrr"}
	if		$tmp75 274 274 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const31 273 	%line{182} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 271 	%line{148} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const23 271 	%line{135} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 270 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp78 $tmp15 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp77 $tmp78 	%argrw{"wr"}
	assign		___312_xi $tmp77 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp80 $tmp15 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp79 $tmp80 	%argrw{"wr"}
	assign		___312_yi $tmp79 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp82 $tmp15 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp81 $tmp82 	%argrw{"wr"}
	assign		___312_zi $tmp81 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp84 183 185 268 270 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp83 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp84 ___312_xx $tmp83 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp86 187 189 266 268 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp85 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp86 ___312_yy $tmp85 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp88 191 193 264 266 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp87 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp88 ___312_zz $tmp87 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp89 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp90 ___312_yy 	%argrw{"wr"}
	assign		$tmp91 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp89 $tmp90 $tmp91 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 210 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp94 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp95 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp96 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp93 $tmp94 $tmp95 $tmp96 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp93 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp98 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp99 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp100 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp97 $tmp98 $tmp99 $tmp100 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp97 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp92 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp92 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp101 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp15 $tmp101 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 215 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp103 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp104 ___312_yy 	%argrw{"wr"}
	assign		$tmp105 ___312_zz 	%argrw{"wr"}
	point		$tmp102 $tmp103 $tmp104 $tmp105 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp102 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp106 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp107 ___318_d $tmp106 	%argrw{"wrr"}
	if		$tmp107 237 264 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp108 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp108 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp109 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp109 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp110 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp110 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp111 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp111 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp112 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp112 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp113 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp113 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp114 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp115 ___318_d $tmp114 	%argrw{"wrr"}
	if		$tmp115 250 264 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp116 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp116 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp117 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp117 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp118 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp118 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp119 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp119 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp120 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp121 ___318_d $tmp120 	%argrw{"wrr"}
	if		$tmp121 259 264 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp122 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp122 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp123 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp123 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp124 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp125 ___318_d $tmp124 	%argrw{"wrr"}
	if		$tmp125 264 264 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp126 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp127 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp128 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp76 ___323_da $const5 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp129 $const21 $tmp76 	%line{148} %argrw{"wrr"}
	sub		___342_t $tmp129 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp130 $const10 $const33 	%line{183} %argrw{"wrr"}
	if		$tmp130 386 386 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const34 385 	%line{184} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 383 	%line{149} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const23 383 	%line{136} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 382 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp133 $tmp15 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp132 $tmp133 	%argrw{"wr"}
	assign		___312_xi $tmp132 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp135 $tmp15 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp134 $tmp135 	%argrw{"wr"}
	assign		___312_yi $tmp134 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp137 $tmp15 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp136 $tmp137 	%argrw{"wr"}
	assign		___312_zi $tmp136 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp139 295 297 380 382 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp138 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp139 ___312_xx $tmp138 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp141 299 301 378 380 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp140 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp141 ___312_yy $tmp140 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp143 303 305 376 378 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp142 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp143 ___312_zz $tmp142 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp144 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp145 ___312_yy 	%argrw{"wr"}
	assign		$tmp146 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp144 $tmp145 $tmp146 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 322 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp149 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp150 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp151 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp148 $tmp149 $tmp150 $tmp151 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp148 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp153 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp154 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp155 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp152 $tmp153 $tmp154 $tmp155 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp152 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp147 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp147 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp156 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp15 $tmp156 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 327 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp158 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp159 ___312_yy 	%argrw{"wr"}
	assign		$tmp160 ___312_zz 	%argrw{"wr"}
	point		$tmp157 $tmp158 $tmp159 $tmp160 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp157 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp161 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp162 ___318_d $tmp161 	%argrw{"wrr"}
	if		$tmp162 349 376 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp163 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp163 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp164 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp164 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp165 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp165 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp166 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp166 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp167 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp167 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp168 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp168 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp169 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp170 ___318_d $tmp169 	%argrw{"wrr"}
	if		$tmp170 362 376 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp171 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp171 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp172 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp172 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp173 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp173 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp174 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp174 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp175 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp176 ___318_d $tmp175 	%argrw{"wrr"}
	if		$tmp176 371 376 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp177 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp177 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp178 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp178 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp179 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp180 ___318_d $tmp179 	%argrw{"wrr"}
	if		$tmp180 376 376 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp181 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp182 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp183 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp131 ___323_da $const6 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp184 $const21 $tmp131 	%line{149} %argrw{"wrr"}
	sub		___342_t $tmp184 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp185 $const10 $const36 	%line{185} %argrw{"wrr"}
	if		$tmp185 498 498 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const37 497 	%line{186} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 495 	%line{150} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const23 495 	%line{137} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 494 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp188 $tmp15 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp187 $tmp188 	%argrw{"wr"}
	assign		___312_xi $tmp187 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp190 $tmp15 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp189 $tmp190 	%argrw{"wr"}
	assign		___312_yi $tmp189 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp192 $tmp15 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp191 $tmp192 	%argrw{"wr"}
	assign		___312_zi $tmp191 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp194 407 409 492 494 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp193 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp194 ___312_xx $tmp193 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp196 411 413 490 492 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp195 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp196 ___312_yy $tmp195 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp198 415 417 488 490 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp197 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp198 ___312_zz $tmp197 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp199 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp200 ___312_yy 	%argrw{"wr"}
	assign		$tmp201 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp199 $tmp200 $tmp201 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 434 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp204 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp205 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp206 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp203 $tmp204 $tmp205 $tmp206 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp203 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp208 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp209 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp210 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp207 $tmp208 $tmp209 $tmp210 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp207 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp202 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp202 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp211 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp15 $tmp211 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 439 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp213 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp214 ___312_yy 	%argrw{"wr"}
	assign		$tmp215 ___312_zz 	%argrw{"wr"}
	point		$tmp212 $tmp213 $tmp214 $tmp215 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp212 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp216 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp217 ___318_d $tmp216 	%argrw{"wrr"}
	if		$tmp217 461 488 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp218 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp218 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp219 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp219 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp220 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp220 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp221 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp221 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp222 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp222 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp223 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp223 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp224 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp225 ___318_d $tmp224 	%argrw{"wrr"}
	if		$tmp225 474 488 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp226 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp226 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp227 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp227 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp228 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp228 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp229 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp229 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp230 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp231 ___318_d $tmp230 	%argrw{"wrr"}
	if		$tmp231 483 488 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp232 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp232 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp233 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp233 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp234 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp235 ___318_d $tmp234 	%argrw{"wrr"}
	if		$tmp235 488 488 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp236 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp237 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp238 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp186 ___323_da $const27 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp239 $const21 $tmp186 	%line{150} %argrw{"wrr"}
	sub		___342_t $tmp239 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp240 $const10 $const39 	%line{187} %argrw{"wrr"}
	if		$tmp240 612 612 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const40 611 	%line{188} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 609 	%line{151} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 609 	%line{138} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 606 	%line{129} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp243 $tmp15 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp242 $tmp243 	%argrw{"wr"}
	assign		___312_xi $tmp242 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp245 $tmp15 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp244 $tmp245 	%argrw{"wr"}
	assign		___312_yi $tmp244 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp247 $tmp15 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp246 $tmp247 	%argrw{"wr"}
	assign		___312_zi $tmp246 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___324_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___324_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___324_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___324_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp249 519 521 604 606 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp248 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp249 ___312_xx $tmp248 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp251 523 525 602 604 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp250 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp251 ___312_yy $tmp250 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp253 527 529 600 602 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp252 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp253 ___312_zz $tmp252 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp254 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp255 ___312_yy 	%argrw{"wr"}
	assign		$tmp256 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp254 $tmp255 $tmp256 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 546 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp259 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp260 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp261 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp258 $tmp259 $tmp260 $tmp261 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp258 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp263 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp264 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp265 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp262 $tmp263 $tmp264 $tmp265 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp262 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp257 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp257 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp266 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp15 $tmp266 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 551 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp268 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp269 ___312_yy 	%argrw{"wr"}
	assign		$tmp270 ___312_zz 	%argrw{"wr"}
	point		$tmp267 $tmp268 $tmp269 $tmp270 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp267 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp271 ___324_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp272 ___318_d $tmp271 	%argrw{"wrr"}
	if		$tmp272 573 600 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp273 ___324_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp273 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp274 ___324_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp274 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp275 ___324_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___324_da $const5 $tmp275 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___324_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp276 ___324_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp276 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp277 ___324_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp277 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp278 ___324_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___324_pa $const5 $tmp278 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___324_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp279 ___324_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp280 ___318_d $tmp279 	%argrw{"wrr"}
	if		$tmp280 586 600 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp281 ___324_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp281 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp282 ___324_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp282 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___324_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp283 ___324_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp283 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp284 ___324_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp284 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___324_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp285 ___324_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp286 ___318_d $tmp285 	%argrw{"wrr"}
	if		$tmp286 595 600 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp287 ___324_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp287 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___324_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp288 ___324_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp288 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___324_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp289 ___324_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp290 ___318_d $tmp289 	%argrw{"wrr"}
	if		$tmp290 600 600 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___324_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___324_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp291 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp292 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp293 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp294 ___324_da $const5 	%line{131} %argrw{"wrr"}
	aref		$tmp295 ___324_da $const4 	%argrw{"wrr"}
	sub		$tmp241 $tmp294 $tmp295 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp296 $const21 $tmp241 	%line{151} %argrw{"wrr"}
	sub		___342_t $tmp296 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp297 $const10 $const43 	%line{189} %argrw{"wrr"}
	if		$tmp297 733 733 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const44 732 	%line{190} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 730 	%line{152} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 724 	%line{143} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 724 	%line{138} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 721 	%line{129} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp301 $tmp15 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp300 $tmp301 	%argrw{"wr"}
	assign		___312_xi $tmp300 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp303 $tmp15 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp302 $tmp303 	%argrw{"wr"}
	assign		___312_yi $tmp302 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp305 $tmp15 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp304 $tmp305 	%argrw{"wr"}
	assign		___312_zi $tmp304 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___324_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___324_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___324_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___324_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp307 634 636 719 721 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp306 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp307 ___312_xx $tmp306 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp309 638 640 717 719 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp308 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp309 ___312_yy $tmp308 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp311 642 644 715 717 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp310 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp311 ___312_zz $tmp310 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp312 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp313 ___312_yy 	%argrw{"wr"}
	assign		$tmp314 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp312 $tmp313 $tmp314 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 661 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp317 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp318 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp319 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp316 $tmp317 $tmp318 $tmp319 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp316 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp321 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp322 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp323 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp320 $tmp321 $tmp322 $tmp323 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp320 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp315 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp315 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp324 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp15 $tmp324 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 666 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp326 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp327 ___312_yy 	%argrw{"wr"}
	assign		$tmp328 ___312_zz 	%argrw{"wr"}
	point		$tmp325 $tmp326 $tmp327 $tmp328 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp325 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp329 ___324_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp330 ___318_d $tmp329 	%argrw{"wrr"}
	if		$tmp330 688 715 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp331 ___324_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp331 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp332 ___324_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp332 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp333 ___324_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___324_da $const5 $tmp333 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___324_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp334 ___324_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp334 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp335 ___324_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp335 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp336 ___324_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___324_pa $const5 $tmp336 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___324_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp337 ___324_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp338 ___318_d $tmp337 	%argrw{"wrr"}
	if		$tmp338 701 715 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp339 ___324_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp339 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp340 ___324_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp340 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___324_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp341 ___324_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp341 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp342 ___324_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp342 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___324_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp343 ___324_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp344 ___318_d $tmp343 	%argrw{"wrr"}
	if		$tmp344 710 715 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp345 ___324_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp345 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___324_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp346 ___324_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp346 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___324_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp347 ___324_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp348 ___318_d $tmp347 	%argrw{"wrr"}
	if		$tmp348 715 715 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___324_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___324_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp349 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp350 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp351 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp352 ___324_da $const5 	%line{131} %argrw{"wrr"}
	aref		$tmp353 ___324_da $const4 	%argrw{"wrr"}
	sub		$tmp299 $tmp352 $tmp353 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___330_t $const7 $tmp299 	%line{143} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp354 ___330_t $const12 	%line{144} %argrw{"wrr"}
	if		$tmp354 728 729 	%argrw{"r"}
	assign		$tmp298 $const12 	%argrw{"wr"}
	assign		$tmp298 ___330_t 	%argrw{"wr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp355 $const21 $tmp298 	%line{152} %argrw{"wrr"}
	sub		___342_t $tmp355 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp356 $const10 $const46 	%line{191} %argrw{"wrr"}
	if		$tmp356 737 737 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___342_t $tmp15 	%line{192} %argrw{"wr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:194
# 	return 0.0;
	assign		___342_t $const2 	%line{194} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:220
# 		if (hard)
	if		$const4 742 742 	%line{220} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:221
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp357 $const21 ___342_t 	%line{221} %argrw{"wrr"}
	sub		$tmp358 $tmp357 $const12 	%argrw{"wrr"}
	fabs		___342_t $tmp358 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:223
# 		sum += t * amp;
	mul		$tmp359 ___342_t ___340_amp 	%line{223} %argrw{"wrr"}
	add		___340_sum ___340_sum $tmp359 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:224
# 		amp *= 0.5;
	mul		___340_amp ___340_amp $const18 	%line{224} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:225
# 		fscale *= 2.0;
	mul		___340_fscale ___340_fscale $const21 	%line{225} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:217
# 	for (i = 0; i <= n; i++) {
	assign		$tmp360 ___340_i 	%line{217} %argrw{"wr"}
	add		___340_i ___340_i $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:228
# 	float rmd = octaves - floor(octaves);
	floor		$tmp361 ___340_octaves 	%line{228} %argrw{"wr"}
	sub		___340_rmd ___340_octaves $tmp361 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:230
# 	if (rmd != 0.0) {
	neq		$tmp362 ___340_rmd $const2 	%line{230} %argrw{"wrr"}
	if		$tmp362 1485 1495 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:231
# 		float t = noise_basis(fscale * p, basis);
	mul		$tmp363 ___340_fscale $tmp12 	%line{231} %argrw{"wrr"}
	functioncall	$const15 1457 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:177
# 	if (basis == "Perlin")
	eq		$tmp364 $const10 $const10 	%line{177} %argrw{"wrr"}
	if		$tmp364 769 769 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:178
# 		return safe_noise(p, 1);
	functioncall	$const16 768 	%line{178} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:158
# 	float f = 0.0;
	assign		___337_f $const2 	%line{158} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:161
# 	if (type == 0)
	eq		$tmp365 $const5 $const4 	%line{161} %argrw{"wrr"}
	if		$tmp365 761 762 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:162
# 		f = noise("perlin", p);
	noise		___337_f $const17 $tmp363 	%line{162} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:166
# 		f = noise(p);
	noise		___337_f $tmp363 	%line{166} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:169
# 	if (!isfinite(f))
	isfinite	$tmp366 ___337_f 	%line{169} %argrw{"wr"}
	eq		$tmp367 $tmp366 $const4 	%argrw{"wrr"}
	if		$tmp367 767 767 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:170
# 		return 0.5;
	assign		___343_t $const18 	%line{170} %argrw{"wr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:172
# 	return f;
	assign		___343_t ___337_f 	%line{172} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:178
# 		return safe_noise(p, 1);
	return	%line{178}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:179
# 	if (basis == "Voronoi F1")
	eq		$tmp368 $const10 $const19 	%line{179} %argrw{"wrr"}
	if		$tmp368 881 881 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:180
# 		return voronoi_F1S(p);
	functioncall	$const20 880 	%line{180} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	functioncall	$const22 878 	%line{147} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:134
# float voronoi_F1(point p) { return voronoi_Fn(p, 0); }
	functioncall	$const23 878 	%line{134} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 877 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp371 $tmp363 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp370 $tmp371 	%argrw{"wr"}
	assign		___312_xi $tmp370 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp373 $tmp363 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp372 $tmp373 	%argrw{"wr"}
	assign		___312_yi $tmp372 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp375 $tmp363 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp374 $tmp375 	%argrw{"wr"}
	assign		___312_zi $tmp374 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp377 790 792 875 877 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp376 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp377 ___312_xx $tmp376 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp379 794 796 873 875 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp378 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp379 ___312_yy $tmp378 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp381 798 800 871 873 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp380 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp381 ___312_zz $tmp380 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp382 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp383 ___312_yy 	%argrw{"wr"}
	assign		$tmp384 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp382 $tmp383 $tmp384 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 817 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp387 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp388 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp389 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp386 $tmp387 $tmp388 $tmp389 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp386 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp391 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp392 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp393 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp390 $tmp391 $tmp392 $tmp393 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp390 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp385 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp385 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp394 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp363 $tmp394 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 822 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp396 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp397 ___312_yy 	%argrw{"wr"}
	assign		$tmp398 ___312_zz 	%argrw{"wr"}
	point		$tmp395 $tmp396 $tmp397 $tmp398 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp395 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp399 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp400 ___318_d $tmp399 	%argrw{"wrr"}
	if		$tmp400 844 871 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp401 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp401 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp402 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp402 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp403 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp403 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp404 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp404 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp405 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp405 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp406 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp406 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp407 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp408 ___318_d $tmp407 	%argrw{"wrr"}
	if		$tmp408 857 871 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp409 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp409 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp410 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp410 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp411 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp411 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp412 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp412 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp413 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp414 ___318_d $tmp413 	%argrw{"wrr"}
	if		$tmp414 866 871 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp415 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp415 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp416 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp416 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp417 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp418 ___318_d $tmp417 	%argrw{"wrr"}
	if		$tmp418 871 871 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp419 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp420 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp421 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp369 ___323_da $const4 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:147
# float voronoi_F1S(point p) { return 2.0 * voronoi_F1(p) - 1.0; }
	mul		$tmp422 $const21 $tmp369 	%line{147} %argrw{"wrr"}
	sub		___343_t $tmp422 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:180
# 		return voronoi_F1S(p);
	return	%line{180}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:181
# 	if (basis == "Voronoi F2")
	eq		$tmp423 $const10 $const30 	%line{181} %argrw{"wrr"}
	if		$tmp423 993 993 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:182
# 		return voronoi_F2S(p);
	functioncall	$const31 992 	%line{182} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	functioncall	$const32 990 	%line{148} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:135
# float voronoi_F2(point p) { return voronoi_Fn(p, 1); }
	functioncall	$const23 990 	%line{135} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 989 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp426 $tmp363 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp425 $tmp426 	%argrw{"wr"}
	assign		___312_xi $tmp425 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp428 $tmp363 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp427 $tmp428 	%argrw{"wr"}
	assign		___312_yi $tmp427 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp430 $tmp363 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp429 $tmp430 	%argrw{"wr"}
	assign		___312_zi $tmp429 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp432 902 904 987 989 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp431 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp432 ___312_xx $tmp431 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp434 906 908 985 987 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp433 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp434 ___312_yy $tmp433 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp436 910 912 983 985 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp435 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp436 ___312_zz $tmp435 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp437 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp438 ___312_yy 	%argrw{"wr"}
	assign		$tmp439 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp437 $tmp438 $tmp439 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 929 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp442 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp443 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp444 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp441 $tmp442 $tmp443 $tmp444 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp441 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp446 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp447 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp448 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp445 $tmp446 $tmp447 $tmp448 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp445 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp440 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp440 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp449 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp363 $tmp449 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 934 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp451 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp452 ___312_yy 	%argrw{"wr"}
	assign		$tmp453 ___312_zz 	%argrw{"wr"}
	point		$tmp450 $tmp451 $tmp452 $tmp453 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp450 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp454 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp455 ___318_d $tmp454 	%argrw{"wrr"}
	if		$tmp455 956 983 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp456 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp456 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp457 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp457 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp458 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp458 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp459 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp459 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp460 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp460 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp461 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp461 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp462 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp463 ___318_d $tmp462 	%argrw{"wrr"}
	if		$tmp463 969 983 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp464 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp464 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp465 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp465 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp466 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp466 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp467 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp467 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp468 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp469 ___318_d $tmp468 	%argrw{"wrr"}
	if		$tmp469 978 983 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp470 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp470 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp471 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp471 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp472 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp473 ___318_d $tmp472 	%argrw{"wrr"}
	if		$tmp473 983 983 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp474 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp475 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp476 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp424 ___323_da $const5 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:148
# float voronoi_F2S(point p) { return 2.0 * voronoi_F2(p) - 1.0; }
	mul		$tmp477 $const21 $tmp424 	%line{148} %argrw{"wrr"}
	sub		___343_t $tmp477 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:182
# 		return voronoi_F2S(p);
	return	%line{182}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:183
# 	if (basis == "Voronoi F3")
	eq		$tmp478 $const10 $const33 	%line{183} %argrw{"wrr"}
	if		$tmp478 1105 1105 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:184
# 		return voronoi_F3S(p);
	functioncall	$const34 1104 	%line{184} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	functioncall	$const35 1102 	%line{149} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:136
# float voronoi_F3(point p) { return voronoi_Fn(p, 2); }
	functioncall	$const23 1102 	%line{136} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 1101 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp481 $tmp363 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp480 $tmp481 	%argrw{"wr"}
	assign		___312_xi $tmp480 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp483 $tmp363 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp482 $tmp483 	%argrw{"wr"}
	assign		___312_yi $tmp482 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp485 $tmp363 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp484 $tmp485 	%argrw{"wr"}
	assign		___312_zi $tmp484 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp487 1014 1016 1099 1101 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp486 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp487 ___312_xx $tmp486 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp489 1018 1020 1097 1099 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp488 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp489 ___312_yy $tmp488 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp491 1022 1024 1095 1097 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp490 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp491 ___312_zz $tmp490 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp492 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp493 ___312_yy 	%argrw{"wr"}
	assign		$tmp494 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp492 $tmp493 $tmp494 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 1041 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp497 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp498 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp499 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp496 $tmp497 $tmp498 $tmp499 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp496 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp501 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp502 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp503 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp500 $tmp501 $tmp502 $tmp503 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp500 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp495 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp495 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp504 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp363 $tmp504 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 1046 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp506 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp507 ___312_yy 	%argrw{"wr"}
	assign		$tmp508 ___312_zz 	%argrw{"wr"}
	point		$tmp505 $tmp506 $tmp507 $tmp508 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp505 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp509 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp510 ___318_d $tmp509 	%argrw{"wrr"}
	if		$tmp510 1068 1095 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp511 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp511 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp512 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp512 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp513 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp513 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp514 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp514 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp515 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp515 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp516 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp516 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp517 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp518 ___318_d $tmp517 	%argrw{"wrr"}
	if		$tmp518 1081 1095 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp519 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp519 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp520 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp520 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp521 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp521 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp522 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp522 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp523 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp524 ___318_d $tmp523 	%argrw{"wrr"}
	if		$tmp524 1090 1095 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp525 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp525 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp526 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp526 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp527 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp528 ___318_d $tmp527 	%argrw{"wrr"}
	if		$tmp528 1095 1095 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp529 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp530 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp531 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp479 ___323_da $const6 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:149
# float voronoi_F3S(point p) { return 2.0 * voronoi_F3(p) - 1.0; }
	mul		$tmp532 $const21 $tmp479 	%line{149} %argrw{"wrr"}
	sub		___343_t $tmp532 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:184
# 		return voronoi_F3S(p);
	return	%line{184}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:185
# 	if (basis == "Voronoi F4")
	eq		$tmp533 $const10 $const36 	%line{185} %argrw{"wrr"}
	if		$tmp533 1217 1217 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:186
# 		return voronoi_F4S(p);
	functioncall	$const37 1216 	%line{186} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	functioncall	$const38 1214 	%line{150} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:137
# float voronoi_F4(point p) { return voronoi_Fn(p, 3); }
	functioncall	$const23 1214 	%line{137} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:119
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 1213 	%line{119} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp536 $tmp363 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp535 $tmp536 	%argrw{"wr"}
	assign		___312_xi $tmp535 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp538 $tmp363 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp537 $tmp538 	%argrw{"wr"}
	assign		___312_yi $tmp537 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp540 $tmp363 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp539 $tmp540 	%argrw{"wr"}
	assign		___312_zi $tmp539 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___323_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___323_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___323_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___323_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp542 1126 1128 1211 1213 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp541 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp542 ___312_xx $tmp541 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp544 1130 1132 1209 1211 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp543 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp544 ___312_yy $tmp543 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp546 1134 1136 1207 1209 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp545 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp546 ___312_zz $tmp545 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp547 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp548 ___312_yy 	%argrw{"wr"}
	assign		$tmp549 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp547 $tmp548 $tmp549 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 1153 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp552 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp553 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp554 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp551 $tmp552 $tmp553 $tmp554 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp551 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp556 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp557 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp558 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp555 $tmp556 $tmp557 $tmp558 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp555 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp550 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp550 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp559 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp363 $tmp559 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 1158 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp561 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp562 ___312_yy 	%argrw{"wr"}
	assign		$tmp563 ___312_zz 	%argrw{"wr"}
	point		$tmp560 $tmp561 $tmp562 $tmp563 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp560 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp564 ___323_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp565 ___318_d $tmp564 	%argrw{"wrr"}
	if		$tmp565 1180 1207 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp566 ___323_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp566 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp567 ___323_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp567 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp568 ___323_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___323_da $const5 $tmp568 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___323_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp569 ___323_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp569 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp570 ___323_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp570 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp571 ___323_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___323_pa $const5 $tmp571 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___323_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp572 ___323_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp573 ___318_d $tmp572 	%argrw{"wrr"}
	if		$tmp573 1193 1207 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp574 ___323_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp574 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp575 ___323_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___323_da $const6 $tmp575 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___323_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp576 ___323_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp576 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp577 ___323_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___323_pa $const6 $tmp577 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___323_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp578 ___323_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp579 ___318_d $tmp578 	%argrw{"wrr"}
	if		$tmp579 1202 1207 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp580 ___323_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___323_da $const27 $tmp580 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___323_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp581 ___323_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___323_pa $const27 $tmp581 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___323_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp582 ___323_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp583 ___318_d $tmp582 	%argrw{"wrr"}
	if		$tmp583 1207 1207 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___323_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___323_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp584 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp585 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp586 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:121
# 	return da[n];
	aref		$tmp534 ___323_da $const27 	%line{121} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:150
# float voronoi_F4S(point p) { return 2.0 * voronoi_F4(p) - 1.0; }
	mul		$tmp587 $const21 $tmp534 	%line{150} %argrw{"wrr"}
	sub		___343_t $tmp587 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:186
# 		return voronoi_F4S(p);
	return	%line{186}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:187
# 	if (basis == "Voronoi F2-F1")
	eq		$tmp588 $const10 $const39 	%line{187} %argrw{"wrr"}
	if		$tmp588 1331 1331 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:188
# 		return voronoi_F1F2S(p);
	functioncall	$const40 1330 	%line{188} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	functioncall	$const41 1328 	%line{151} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 1328 	%line{138} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 1325 	%line{129} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp591 $tmp363 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp590 $tmp591 	%argrw{"wr"}
	assign		___312_xi $tmp590 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp593 $tmp363 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp592 $tmp593 	%argrw{"wr"}
	assign		___312_yi $tmp592 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp595 $tmp363 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp594 $tmp595 	%argrw{"wr"}
	assign		___312_zi $tmp594 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___324_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___324_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___324_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___324_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp597 1238 1240 1323 1325 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp596 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp597 ___312_xx $tmp596 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp599 1242 1244 1321 1323 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp598 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp599 ___312_yy $tmp598 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp601 1246 1248 1319 1321 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp600 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp601 ___312_zz $tmp600 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp602 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp603 ___312_yy 	%argrw{"wr"}
	assign		$tmp604 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp602 $tmp603 $tmp604 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 1265 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp607 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp608 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp609 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp606 $tmp607 $tmp608 $tmp609 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp606 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp611 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp612 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp613 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp610 $tmp611 $tmp612 $tmp613 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp610 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp605 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp605 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp614 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp363 $tmp614 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 1270 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp616 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp617 ___312_yy 	%argrw{"wr"}
	assign		$tmp618 ___312_zz 	%argrw{"wr"}
	point		$tmp615 $tmp616 $tmp617 $tmp618 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp615 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp619 ___324_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp620 ___318_d $tmp619 	%argrw{"wrr"}
	if		$tmp620 1292 1319 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp621 ___324_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp621 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp622 ___324_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp622 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp623 ___324_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___324_da $const5 $tmp623 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___324_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp624 ___324_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp624 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp625 ___324_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp625 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp626 ___324_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___324_pa $const5 $tmp626 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___324_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp627 ___324_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp628 ___318_d $tmp627 	%argrw{"wrr"}
	if		$tmp628 1305 1319 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp629 ___324_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp629 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp630 ___324_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp630 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___324_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp631 ___324_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp631 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp632 ___324_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp632 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___324_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp633 ___324_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp634 ___318_d $tmp633 	%argrw{"wrr"}
	if		$tmp634 1314 1319 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp635 ___324_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp635 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___324_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp636 ___324_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp636 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___324_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp637 ___324_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp638 ___318_d $tmp637 	%argrw{"wrr"}
	if		$tmp638 1319 1319 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___324_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___324_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp639 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp640 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp641 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp642 ___324_da $const5 	%line{131} %argrw{"wrr"}
	aref		$tmp643 ___324_da $const4 	%argrw{"wrr"}
	sub		$tmp589 $tmp642 $tmp643 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:151
# float voronoi_F1F2S(point p) { return 2.0 * voronoi_F1F2(p) - 1.0; }
	mul		$tmp644 $const21 $tmp589 	%line{151} %argrw{"wrr"}
	sub		___343_t $tmp644 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:188
# 		return voronoi_F1F2S(p);
	return	%line{188}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:189
# 	if (basis == "Voronoi Crackle")
	eq		$tmp645 $const10 $const43 	%line{189} %argrw{"wrr"}
	if		$tmp645 1452 1452 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:190
# 		return voronoi_CrS(p);
	functioncall	$const44 1451 	%line{190} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	functioncall	$const45 1449 	%line{152} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	functioncall	$const41 1443 	%line{143} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:138
# float voronoi_F1F2(point p) { return voronoi_FnFn(p, 0, 1); }
	functioncall	$const42 1443 	%line{138} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:129
# 	voronoi(p, "Distance Squared", 0, da, pa);
	functioncall	$const25 1440 	%line{129} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:59
# 	xi = (int)floor(p[0]);
	compref		$tmp649 $tmp363 $const4 	%line{59} %argrw{"wrr"}
	floor		$tmp648 $tmp649 	%argrw{"wr"}
	assign		___312_xi $tmp648 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:60
# 	yi = (int)floor(p[1]);
	compref		$tmp651 $tmp363 $const5 	%line{60} %argrw{"wrr"}
	floor		$tmp650 $tmp651 	%argrw{"wr"}
	assign		___312_yi $tmp650 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:61
# 	zi = (int)floor(p[2]);
	compref		$tmp653 $tmp363 $const6 	%line{61} %argrw{"wrr"}
	floor		$tmp652 $tmp653 	%argrw{"wr"}
	assign		___312_zi $tmp652 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:63
# 	da[0] = 1e10;
	aassign		___324_da $const4 $const26 	%line{63} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:64
# 	da[1] = 1e10;
	aassign		___324_da $const5 $const26 	%line{64} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:65
# 	da[2] = 1e10;
	aassign		___324_da $const6 $const26 	%line{65} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:66
# 	da[3] = 1e10;
	aassign		___324_da $const27 $const26 	%line{66} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	for		$tmp655 1353 1355 1438 1440 	%line{68} %argrw{"r"}
	sub		___312_xx ___312_xi $const5 	%argrw{"wrr"}
	add		$tmp654 ___312_xi $const5 	%argrw{"wrr"}
	le		$tmp655 ___312_xx $tmp654 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	for		$tmp657 1357 1359 1436 1438 	%line{69} %argrw{"r"}
	sub		___312_yy ___312_yi $const5 	%argrw{"wrr"}
	add		$tmp656 ___312_yi $const5 	%argrw{"wrr"}
	le		$tmp657 ___312_yy $tmp656 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	for		$tmp659 1361 1363 1434 1436 	%line{70} %argrw{"r"}
	sub		___312_zz ___312_zi $const5 	%argrw{"wrr"}
	add		$tmp658 ___312_zi $const5 	%argrw{"wrr"}
	le		$tmp659 ___312_zz $tmp658 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:71
# 				point ip = point(xx, yy, zz);
	assign		$tmp660 ___312_xx 	%line{71} %argrw{"wr"}
	assign		$tmp661 ___312_yy 	%argrw{"wr"}
	assign		$tmp662 ___312_zz 	%argrw{"wr"}
	point		___318_ip $tmp660 $tmp661 $tmp662 	%argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	functioncall	$const28 1380 	%line{72} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:47
# 	float r = cellnoise(p);
	cellnoise	___311_r ___318_ip 	%line{47} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:48
# 	float g = cellnoise(point(p[1], p[0], p[2]));
	compref		$tmp665 ___318_ip $const5 	%line{48} %argrw{"wrr"}
	compref		$tmp666 ___318_ip $const4 	%argrw{"wrr"}
	compref		$tmp667 ___318_ip $const6 	%argrw{"wrr"}
	point		$tmp664 $tmp665 $tmp666 $tmp667 	%argrw{"wrrr"}
	cellnoise	___311_g $tmp664 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:49
# 	float b = cellnoise(point(p[1], p[2], p[0]));
	compref		$tmp669 ___318_ip $const5 	%line{49} %argrw{"wrr"}
	compref		$tmp670 ___318_ip $const6 	%argrw{"wrr"}
	compref		$tmp671 ___318_ip $const4 	%argrw{"wrr"}
	point		$tmp668 $tmp669 $tmp670 $tmp671 	%argrw{"wrrr"}
	cellnoise	___311_b $tmp668 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:51
# 	return color(r, g, b);
	color		$tmp663 ___311_r ___311_g ___311_b 	%line{51} %argrw{"wrrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:72
# 				point vp = (point)cellnoise_color(ip);
	assign		___318_vp $tmp663 	%line{72} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:73
# 				point pd = p - (vp + ip);
	add		$tmp672 ___318_vp ___318_ip 	%line{73} %argrw{"wrr"}
	sub		___318_pd $tmp363 $tmp672 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:74
# 				float d = voronoi_distance(distance_metric, pd, e);
	functioncall	$const29 1385 	%line{74} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:24
# 		return dot(d, d);
	dot		___318_d ___318_pd ___318_pd 	%line{24} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:76
# 				vp += point(xx, yy, zz);
	assign		$tmp674 ___312_xx 	%line{76} %argrw{"wr"}
	assign		$tmp675 ___312_yy 	%argrw{"wr"}
	assign		$tmp676 ___312_zz 	%argrw{"wr"}
	point		$tmp673 $tmp674 $tmp675 $tmp676 	%argrw{"wrrr"}
	add		___318_vp ___318_vp $tmp673 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:78
# 				if (d < da[0]) {
	aref		$tmp677 ___324_da $const4 	%line{78} %argrw{"wrr"}
	lt		$tmp678 ___318_d $tmp677 	%argrw{"wrr"}
	if		$tmp678 1407 1434 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:79
# 					da[3] = da[2];
	aref		$tmp679 ___324_da $const6 	%line{79} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp679 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:80
# 					da[2] = da[1];
	aref		$tmp680 ___324_da $const5 	%line{80} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp680 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:81
# 					da[1] = da[0];
	aref		$tmp681 ___324_da $const4 	%line{81} %argrw{"wrr"}
	aassign		___324_da $const5 $tmp681 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:82
# 					da[0] = d;
	aassign		___324_da $const4 ___318_d 	%line{82} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:84
# 					pa[3] = pa[2];
	aref		$tmp682 ___324_pa $const6 	%line{84} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp682 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:85
# 					pa[2] = pa[1];
	aref		$tmp683 ___324_pa $const5 	%line{85} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp683 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:86
# 					pa[1] = pa[0];
	aref		$tmp684 ___324_pa $const4 	%line{86} %argrw{"wrr"}
	aassign		___324_pa $const5 $tmp684 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:87
# 					pa[0] = vp;
	aassign		___324_pa $const4 ___318_vp 	%line{87} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:89
# 				else if (d < da[1]) {
	aref		$tmp685 ___324_da $const5 	%line{89} %argrw{"wrr"}
	lt		$tmp686 ___318_d $tmp685 	%argrw{"wrr"}
	if		$tmp686 1420 1434 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:90
# 					da[3] = da[2];
	aref		$tmp687 ___324_da $const6 	%line{90} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp687 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:91
# 					da[2] = da[1];
	aref		$tmp688 ___324_da $const5 	%line{91} %argrw{"wrr"}
	aassign		___324_da $const6 $tmp688 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:92
# 					da[1] = d;
	aassign		___324_da $const5 ___318_d 	%line{92} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:94
# 					pa[3] = pa[2];
	aref		$tmp689 ___324_pa $const6 	%line{94} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp689 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:95
# 					pa[2] = pa[1];
	aref		$tmp690 ___324_pa $const5 	%line{95} %argrw{"wrr"}
	aassign		___324_pa $const6 $tmp690 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:96
# 					pa[1] = vp;
	aassign		___324_pa $const5 ___318_vp 	%line{96} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:98
# 				else if (d < da[2]) {
	aref		$tmp691 ___324_da $const6 	%line{98} %argrw{"wrr"}
	lt		$tmp692 ___318_d $tmp691 	%argrw{"wrr"}
	if		$tmp692 1429 1434 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:99
# 					da[3] = da[2];
	aref		$tmp693 ___324_da $const6 	%line{99} %argrw{"wrr"}
	aassign		___324_da $const27 $tmp693 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:100
# 					da[2] = d;
	aassign		___324_da $const6 ___318_d 	%line{100} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:102
# 					pa[3] = pa[2];
	aref		$tmp694 ___324_pa $const6 	%line{102} %argrw{"wrr"}
	aassign		___324_pa $const27 $tmp694 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:103
# 					pa[2] = vp;
	aassign		___324_pa $const6 ___318_vp 	%line{103} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:105
# 				else if (d < da[3]) {
	aref		$tmp695 ___324_da $const27 	%line{105} %argrw{"wrr"}
	lt		$tmp696 ___318_d $tmp695 	%argrw{"wrr"}
	if		$tmp696 1434 1434 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:106
# 					da[3] = d;
	aassign		___324_da $const27 ___318_d 	%line{106} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:107
# 					pa[3] = vp;
	aassign		___324_pa $const27 ___318_vp 	%line{107} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:70
# 			for (zz = zi - 1; zz <= zi + 1; zz++) {
	assign		$tmp697 ___312_zz 	%line{70} %argrw{"wr"}
	add		___312_zz ___312_zz $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:69
# 		for (yy = yi - 1; yy <= yi + 1; yy++) {
	assign		$tmp698 ___312_yy 	%line{69} %argrw{"wr"}
	add		___312_yy ___312_yy $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:68
# 	for (xx = xi - 1; xx <= xi + 1; xx++) {
	assign		$tmp699 ___312_xx 	%line{68} %argrw{"wr"}
	add		___312_xx ___312_xx $const5 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:131
# 	return da[n2] - da[n1];
	aref		$tmp700 ___324_da $const5 	%line{131} %argrw{"wrr"}
	aref		$tmp701 ___324_da $const4 	%argrw{"wrr"}
	sub		$tmp647 $tmp700 $tmp701 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:143
# 	float t = 10.0 * voronoi_F1F2(p);
	mul		___330_t $const7 $tmp647 	%line{143} %argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:144
# 	return (t > 1.0) ? 1.0 : t;
	gt		$tmp702 ___330_t $const12 	%line{144} %argrw{"wrr"}
	if		$tmp702 1447 1448 	%argrw{"r"}
	assign		$tmp646 $const12 	%argrw{"wr"}
	assign		$tmp646 ___330_t 	%argrw{"wr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:152
# float voronoi_CrS(point p) { return 2.0 * voronoi_Cr(p) - 1.0; }
	mul		$tmp703 $const21 $tmp646 	%line{152} %argrw{"wrr"}
	sub		___343_t $tmp703 $const12 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:190
# 		return voronoi_CrS(p);
	return	%line{190}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:191
# 	if (basis == "Cell Noise")
	eq		$tmp704 $const10 $const46 	%line{191} %argrw{"wrr"}
	if		$tmp704 1456 1456 	%argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:192
# 		return cellnoise(p);
	cellnoise	___343_t $tmp363 	%line{192} %argrw{"wr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:194
# 	return 0.0;
	assign		___343_t $const2 	%line{194} %argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:233
# 		if (hard)
	if		$const4 1461 1461 	%line{233} %argrw{"r"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:234
# 			t = fabs(2.0 * t - 1.0);
	mul		$tmp705 $const21 ___343_t 	%line{234} %argrw{"wrr"}
	sub		$tmp706 $tmp705 $const12 	%argrw{"wrr"}
	fabs		___343_t $tmp706 	%argrw{"wr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:236
# 		float sum2 = sum + t * amp;
	mul		$tmp707 ___343_t ___340_amp 	%line{236} %argrw{"wrr"}
	add		___343_sum2 ___340_sum $tmp707 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:238
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp708 $const5 ___340_n 	%line{238} %argrw{"wrr"}
	assign		$tmp709 $tmp708 	%argrw{"wr"}
	add		$tmp710 ___340_n $const5 	%argrw{"wrr"}
	shl		$tmp711 $const5 $tmp710 	%argrw{"wrr"}
	sub		$tmp712 $tmp711 $const5 	%argrw{"wrr"}
	assign		$tmp713 $tmp712 	%argrw{"wr"}
	div		$tmp714 $tmp709 $tmp713 	%argrw{"wrr"}
	mul		___340_sum ___340_sum $tmp714 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:239
# 		sum2 *= ((float)(1 << (n + 1)) / (float)((1 << (n + 2)) - 1));
	add		$tmp715 ___340_n $const5 	%line{239} %argrw{"wrr"}
	shl		$tmp716 $const5 $tmp715 	%argrw{"wrr"}
	assign		$tmp717 $tmp716 	%argrw{"wr"}
	add		$tmp718 ___340_n $const6 	%argrw{"wrr"}
	shl		$tmp719 $const5 $tmp718 	%argrw{"wrr"}
	sub		$tmp720 $tmp719 $const5 	%argrw{"wrr"}
	assign		$tmp721 $tmp720 	%argrw{"wr"}
	div		$tmp722 $tmp717 $tmp721 	%argrw{"wrr"}
	mul		___343_sum2 ___343_sum2 $tmp722 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:241
# 		return (1.0 - rmd) * sum + rmd * sum2;
	sub		$tmp723 $const12 ___340_rmd 	%line{241} %argrw{"wrr"}
	mul		$tmp724 $tmp723 ___340_sum 	%argrw{"wrr"}
	mul		$tmp725 ___340_rmd ___343_sum2 	%argrw{"wrr"}
	add		$tmp11 $tmp724 $tmp725 	%argrw{"wrr"}
	return
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:244
# 		sum *= ((float)(1 << n) / (float)((1 << (n + 1)) - 1));
	shl		$tmp726 $const5 ___340_n 	%line{244} %argrw{"wrr"}
	assign		$tmp727 $tmp726 	%argrw{"wr"}
	add		$tmp728 ___340_n $const5 	%argrw{"wrr"}
	shl		$tmp729 $const5 $tmp728 	%argrw{"wrr"}
	sub		$tmp730 $tmp729 $const5 	%argrw{"wrr"}
	assign		$tmp731 $tmp730 	%argrw{"wr"}
	div		$tmp732 $tmp727 $tmp731 	%argrw{"wrr"}
	mul		___340_sum ___340_sum $tmp732 	%argrw{"wrr"}
# D:/blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_texture.h:245
# 		return sum;
	assign		$tmp11 ___340_sum 	%line{245} %argrw{"wr"}
	return
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:35
# 	}
	mul		$tmp733 Distortion $tmp11 	%filename{"D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl"} %line{35} %argrw{"wrr"}
	add		___346_n ___346_n $tmp733 	%argrw{"wrr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:37
# }
	sin		$tmp734 ___346_n 	%line{37} %argrw{"wr"}
	mul		$tmp735 $const18 $tmp734 	%argrw{"wrr"}
	add		Fac $const18 $tmp735 	%argrw{"wrr"}
# D:\\blender_dev\\code\\blender\\intern\\cycles\\kernel\\shaders\\node_wave_texture.osl:58
# }
	assign		Color Fac 	%line{58} %argrw{"wr"}
	end
